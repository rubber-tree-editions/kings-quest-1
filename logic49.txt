#include "vars.txt"

LOGIC__HEADER

#define rfFALLING_DOWN_WELL rf0
#define rfFALLEN_DOWN_WELL rf1
#define rfFALLEN_OFF_ROPE rf2
#define rfSWIMMING rf3
#define rfPLAYING_SND_FALLING rf4
#define rfFELL_FROM_ROPE rf5
#define rfPLAYED_SND_FALLING rf7

#define rvCOUNTDOWN rv0

#define oROPE_AND_BUCKET o1

if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  #if BUILD_TARGET != APPLE_IIGS
    load.sound(SND_FALLING);
  #endif
  load.logics(LOGIC101_SWIMMING);
  call(LOGIC101_SWIMMING);
  #if BUILD_TARGET == APPLE_IIGS
    load.view(99);
    load.view(105);
    load.view(74);
    load.view(70);
    load.view(16);
    load.view(72);
  #else
    load.view(72);
    load.view(16);
    load.view(74);
    load.view(105);
    load.view(99);
  #endif
  #if BUILD_TARGET == APPLE_IIGS
    load.sound(SND_FALLING);
  #endif
  if (fFALLING_DOWN_WELL) {
    set.view(oEGO, 105);
    position(oEGO, 81, 48);
    ignore.objs(oEGO);
    ignore.blocks(oEGO);
    set.priority(oEGO, 15);
    set(fCYCLE_EGO_ANIMATION);
    set(rfFALLING_DOWN_WELL);
    #if BUILD_TARGET == APPLE_IIGS
      sound(SND_FALLING, fMISC_END_MARKER);
    #endif
    move.obj(oEGO, 81, 164, 3, rfFALLEN_DOWN_WELL);
  }
  if (vPREV_ROOM_NO == ROOM12_TOP_OF_WELL && !fFALLING_DOWN_WELL) {
    if (!fPOINTS_FOR_CONTROLLED_WELL_ENTRY) {
      set(fPOINTS_FOR_CONTROLLED_WELL_ENTRY);
      vSCORE += 1;
    }
    if (fON_WELL_ROPE) {
      set.view(oEGO, 74);
      position(oEGO, 81, 48);
      set.priority(oEGO, 15);
    }
  }
  if (vPREV_ROOM_NO == ROOM52_IN_WELL_UNDERWATER) {
    vAQUATIC_ACTIVITY = AQUATICACTIVITY_SWIMMING;
    #if BUILD_TARGET == APPLE_IIGS
      start.motion(oEGO);
    #endif
    set.view(oEGO, 70);
    set(rfSWIMMING);
    rvCOUNTDOWN = 250;
    position(oEGO, 75, 163);
  }
  if (fROPE_DANGLING_IN_WELL) {
    add.to.pic(99, 0, 0, 84, 119, 4, 4);
    #if BUILD_TARGET != APPLE_IIGS
      discard.view(99);
    #endif
  }
  if (fBUCKET_LOWERED) {
    if (fIN_WELL_BUCKET) {
      animate.obj(oROPE_AND_BUCKET);
      set.view(oROPE_AND_BUCKET, 72);
      position(oROPE_AND_BUCKET, 79, 150);
      set.cel(oROPE_AND_BUCKET, 0);
      draw(oROPE_AND_BUCKET);
      add.to.pic(99, 0, 0, 84, 119, 4, 4);
      end.of.loop(oROPE_AND_BUCKET, fMISC_END_MARKER);
      goto(SHOWPIC);
    }
    else {
      add.to.pic(99, 0, 0, 84, 119, 4, 4);
      animate.obj(oROPE_AND_BUCKET);
      set.view(oROPE_AND_BUCKET, 16);
      position(oROPE_AND_BUCKET, 79, 150);
      set.cel(oROPE_AND_BUCKET, 0);
      draw(oROPE_AND_BUCKET);
      stop.update(oROPE_AND_BUCKET);
    }
  }
  draw(oEGO);
  SHOWPIC:
    show.pic();
}
#if VERSION_MAJOR >= 2
  if (fROPE_DANGLING_IN_WELL || fBUCKET_LOWERED) {
    if (said("examine", "rope")) {
      print("It is a very long, sturdy rope.");
    }
  }
#endif
if (fEGO_ON_WATER) {
  observe.blocks(oEGO);
}
else {
  ignore.blocks(oEGO);
}
if (fFALLING_DOWN_WELL && !rfFALLEN_DOWN_WELL && !rfFALLEN_OFF_ROPE && !rfPLAYING_SND_FALLING) {
  #if BUILD_TARGET != APPLE_IIGS
    sound(SND_FALLING, fSOUND_END_MARKER);
  #endif
  set(rfPLAYING_SND_FALLING);
}
#if VERSION_MAJOR < 2
  if (fSOUND_END_MARKER) {
    if (!rfFALLEN_DOWN_WELL && !rfFALLEN_OFF_ROPE) {
      reset(rfPLAYING_SND_FALLING);
      reset(fSOUND_END_MARKER);
    }
  }
#endif
if (fON_WELL_ROPE) {
  get.posn(oEGO, vTEMP_X, vTEMP_Y);
  if (vTEMP_Y > 115 && fBUCKET_LOWERED) {
    #if BUILD_TARGET == APPLE_IIGS
      sound(SND_FALLING, rfPLAYED_SND_FALLING);
    #endif
    reset(fON_WELL_ROPE);
    set(fFALLING_DOWN_WELL);
    set.view(oEGO, 105);
    vTEMP_Y = 164;
    ignore.objs(oEGO);
    set.priority(oEGO, 15);
    set(fCYCLE_EGO_ANIMATION);
    set(rfFALLING_DOWN_WELL);
    vTEMP_STEP = 3;
    move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFALLEN_OFF_ROPE);
  }
  if (vTEMP_Y > 115 && fROPE_DANGLING_IN_WELL) {
    #if BUILD_TARGET == APPLE_IIGS
      sound(SND_FALLING, rfPLAYED_SND_FALLING);
    #endif
    reset(fON_WELL_ROPE);
    set(fFALLING_DOWN_WELL);
    set.view(oEGO, 105);
    vTEMP_Y = 164;
    ignore.objs(oEGO);
    set.priority(oEGO, 15);
    set(fCYCLE_EGO_ANIMATION);
    set(rfFALLING_DOWN_WELL);
    vTEMP_STEP = 3;
    move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFALLEN_OFF_ROPE);
  }
  if (vTEMP_X < 79 || vTEMP_X > 83) {
    if (vTEMP_Y > 70) {
      #if BUILD_TARGET == APPLE_IIGS
        sound(SND_FALLING, rfPLAYED_SND_FALLING);
      #endif
      reset(fON_WELL_ROPE);
      set(fFALLING_DOWN_WELL);
      set.view(oEGO, 105);
      vTEMP_Y = 164;
      ignore.objs(oEGO);
      set.priority(oEGO, 15);
      set(fCYCLE_EGO_ANIMATION);
      set(rfFALLING_DOWN_WELL);
      vTEMP_STEP = 3;
      move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFALLEN_OFF_ROPE);
    }
    else {
      #if BUILD_TARGET == APPLE_IIGS
        sound(SND_FALLING, rfPLAYED_SND_FALLING);
      #endif
      reset(fON_WELL_ROPE);
      set(fFALLING_DOWN_WELL);
      set(rfFELL_FROM_ROPE);
      set.view(oEGO, 105);
      vTEMP_Y = 164;
      ignore.objs(oEGO);
      set.priority(oEGO, 15);
      set(fCYCLE_EGO_ANIMATION);
      set(rfFALLING_DOWN_WELL);
      vTEMP_STEP = 3;
      move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFALLEN_DOWN_WELL);
    }
  }
}
if (rfFALLEN_DOWN_WELL) {
  reset(rfFALLEN_DOWN_WELL);
  stop.sound();
  erase(oEGO);
  if (fFALLING_DOWN_WELL && !rfFELL_FROM_ROPE) {
    print("You should be more careful before trying that next time!");
  }
  else {
    print("I can see you need a little practice climbing rope!");
  }
  set(fGAME_OVER);
}
if (rfFALLEN_OFF_ROPE) {
  reset(rfFALLING_DOWN_WELL);
  reset(rfFALLEN_OFF_ROPE);
  reset(fCYCLE_EGO_ANIMATION);
  reset(fFALLING_DOWN_WELL);
  release.priority(oEGO);
  stop.sound();
  set.view(oEGO, 93);
}
if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING && !rfSWIMMING) {
  set(rfSWIMMING);
  rvCOUNTDOWN = 250;
}
rvCOUNTDOWN--;
if (rvCOUNTDOWN == 1 && rfSWIMMING) {
  erase(oEGO);
  print("Your arms are like lead... from swimming.  You find it impossible... to swim any longer.  You sink to the bottom... of the well....");
  set(fGAME_OVER);
}
if (!fON_WELL_ROPE && !rfFALLING_DOWN_WELL) {
  if (said("climb", "rope") || said("up", "rope")) {
    if (!fROPE_DANGLING_IN_WELL && !fBUCKET_LOWERED) {
      print(m4 /* "The rope is out of reach." */);
    }
    if (fROPE_DANGLING_IN_WELL) {
      erase(oEGO);
      vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
      reset(fCYCLE_EGO_ANIMATION);
      set.view(oEGO, 74);
      position(oEGO, 81, 113);
      set.priority(oEGO, 15);
      draw(oEGO);
      move.obj(oEGO, 81, 113, 0, fMISC_END_MARKER);
      set(fON_WELL_ROPE);
      reset(rfSWIMMING);
    }
    if (fBUCKET_LOWERED && !fIN_WELL_BUCKET) {
      erase(oEGO);
      vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
      reset(fCYCLE_EGO_ANIMATION);
      set.view(oEGO, 74);
      position(oEGO, 81, 113);
      set.priority(oEGO, 15);
      draw(oEGO);
      move.obj(oEGO, 81, 113, 0, fMISC_END_MARKER);
      set(fON_WELL_ROPE);
      reset(rfSWIMMING);
    }
    if (fIN_WELL_BUCKET) {
      start.update(oROPE_AND_BUCKET);
      erase(oROPE_AND_BUCKET);
      set.view(oROPE_AND_BUCKET, 16);
      set.view(oEGO, 74);
      position(oROPE_AND_BUCKET, 78, 150);
      position(oEGO, 81, 113);
      set.cel(oROPE_AND_BUCKET, 0);
      draw(oROPE_AND_BUCKET);
      stop.update(oROPE_AND_BUCKET);
      set.priority(oEGO, 15);
      draw(oEGO);
      move.obj(oEGO, 81, 113, 0, fMISC_END_MARKER);
      set(fON_WELL_ROPE);
      reset(fIN_WELL_BUCKET);
    }
  }
  if (fIN_WELL_BUCKET) {
    if (said("go", "water")
      || said("exit", "bucket")
      || said("go", "water")
      || said("jump", "water")
#if VERSION_MAJOR >= 2
      || said("leave", "bucket")
#endif
    ) {
      start.update(oROPE_AND_BUCKET);
      erase(oROPE_AND_BUCKET);
      set.view(oROPE_AND_BUCKET, 16);
      set.view(oEGO, 105);
      position(oROPE_AND_BUCKET, 79, 150);
      position(oEGO, 81, 124);
      set(fCYCLE_EGO_ANIMATION);
      move.obj(oEGO, 81, 164, 3, rfFALLEN_OFF_ROPE);
      set.cel(oROPE_AND_BUCKET, 0);
      draw(oROPE_AND_BUCKET);
      stop.update(oROPE_AND_BUCKET);
      set.priority(oEGO, 15);
      draw(oEGO);
      set(fON_WELL_ROPE);
      reset(fIN_WELL_BUCKET);
    }
  }
}
if (said("climb", "well") || said("up", "well")) {
  print("You cannot climb the sides of the well.  They are too steep and slippery.");
}
if (said("examine", "well")) {
  print("When you look upwards, you see the top of the well far, far above.");
}
if (!fCARRYING_BUCKET) {
  if (said("examine", "bucket")) {
    if (fBUCKET_LOWERED) {
      print("Although you can only see the bottom of the bucket, it looks like a very nice bucket.");
    }
    else {
      print("The bucket is not here.");
    }
  }
  if (said("get", "bucket")) {
    if (fBUCKET_LOWERED) {
      print("How are you going to get the bucket?");
    }
    else {
      print("The bucket is not here.");
    }
  }
  #if VERSION_MAJOR >= 2
    if (said("go", "bucket") || said("get in", "bucket")) if (fBUCKET_LOWERED && !fIN_WELL_BUCKET) {
      print("I don't think that getting in the bucket right now will do you very much good.");
    }
  #else
    if (said("go", "bucket") && fBUCKET_LOWERED && !fIN_WELL_BUCKET) {
      print("I don't think that getting in the bucket right now will do you very much good.");
    }
  #endif
}
if (
  said("untie", "rope")
#if VERSION_MAJOR >= 2
  || said("untie", "bucket")
#endif
) {
  if (fON_WELL_ROPE || fIN_WELL_BUCKET) {
    print("The knot is tied very tightly.");
  }
  else {
    print(m21 /* "The rope is out of reach." */);
  }
}
if (said("get", "rope")) {
  if (fON_WELL_ROPE || fIN_WELL_BUCKET) {
    print("The rope is secured to the well with a very tight knot.");
  }
  else {
    print(m21 /* "The rope is out of reach." */);
  }
}
if (said("break", "rope")) {
  if (fON_WELL_ROPE || fIN_WELL_BUCKET) {
    print("The thick rope resists your efforts.");
  }
  else {
    print(m21 /* "The rope is out of reach." */);
  }
}
if (said("lower", "bucket")
  || said("raise", "bucket")
  || said("lower", "rope")
  || said("raise", "rope")
) {
  print("A person in your position is in no position to raise or lower anything.");
}
if (!fCARRYING_DAGGER) {
  if (said("cut", "rope")) {
    print("You have nothing to cut the rope with.");
  }
}
if (fCARRYING_DAGGER) {
  if (said("cut", "rope")) {
    if (fON_WELL_ROPE && fBUCKET_LOWERED) {
      print("Just before slitting the rope, you realize that it is not a very wise move at this time.");
    }
    if (fIN_WELL_BUCKET) {
      print("Just before slitting the rope, you realize that it is not a very wise move at this time.");
    }
    if (!fBUCKET_LOWERED) {
      print("There is no reason to cut the rope.");
    }
    if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING && fBUCKET_LOWERED) {
      print("You reach up out of the well water and cut the thick rope that holds the bucket.");
      start.update(oROPE_AND_BUCKET);
      erase(oROPE_AND_BUCKET);
      set(fCARRYING_BUCKET);
      set(fBUCKET_ROPE_CUT);
      reset(fBUCKET_LOWERED);
      set(fROPE_DANGLING_IN_WELL);
      vSCORE += 2;
      get("water bucket");
      if (fBUCKET_ON_WELL_HAS_WATER) {
        set(fBUCKET_FILLED);
        get("water");
        if (!fFILL_BUCKET_POINTS) {
          set(fFILL_BUCKET_POINTS);
          vSCORE += 2;
        }
      }
    }
    if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING) {
      print("You have other things to think about right now.");
    }
    if (!fBUCKET_LOWERED && !fROPE_DANGLING_IN_WELL) {
      print(m21 /* "The rope is out of reach." */);
    }
  }
}
if (!fBUCKET_FILLED) {
  if (said("examine", "water")) {
    print("This is murky well water.");
  }
  if (said("drink", "water")) {
    if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING || vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING) {
      print("The water does not taste as good as you expected.");
    }
    else {
      print("You need to be closer to the water to drink.");
    }
  }
  if (said("get", "water")) {
    if (fCARRYING_BUCKET && (
      vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING
      || vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING
    )) {
      print("In the midst of your activities, you fill the bucket with well water.");
      set(fBUCKET_FILLED);
      if (!fFILL_BUCKET_POINTS) {
        vSCORE += 2;
        set(fFILL_BUCKET_POINTS);
      }
    }
    else {
      print("There is no way for you to get water now.");
    }
  }
}
if (
#if VERSION_MAJOR >= 2
  vAQUATIC_ACTIVITY != AQUATICACTIVITY_DROWNING &&
#endif
  vAQUATIC_ACTIVITY != AQUATICACTIVITY_SWIMMING
) {
  if (said("dive", "water") || said("dive", "down") || said("dive")) {
    print("Now is not the time to try diving.");
  }
}
if (
#if VERSION_MAJOR >= 2
  vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING ||
#endif
  vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING
) {
  if (said("dive", "water") || said("dive", "down") || said("dive")) {
    if (!fPOINTS_FOR_DIVING_IN_WELL) {
      set(fPOINTS_FOR_DIVING_IN_WELL);
      vSCORE += 2;
    }
    new.room(ROOM52_IN_WELL_UNDERWATER);
  }
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM12_TOP_OF_WELL);
}
call(LOGIC101_SWIMMING);
return;

LOGIC__FOOTER

#ifndef LOGIC_AS_C
#message 1 "I can see you need a little practice climbing rope!"
#message 2 "You should be more careful before trying that next time!"
#message 3 "Your arms are like lead... from swimming.  You find it impossible... to swim any longer.  You sink to the bottom... of the well...."
#message 4 "The rope is out of reach."
#message 5 "You cannot climb the sides of the well.  They are too steep and slippery."
#message 6 "When you look upwards, you see the top of the well far, far above."
#message 7 "Although you can only see the bottom of the bucket, it looks like a very nice bucket."
#message 8 "The bucket is not here."
#message 9 "How are you going to get the bucket?"
#message 10 "This is murky well water."
#message 11 "The water does not taste as good as you expected."
#message 12 "In the midst of your activities, you fill the bucket with well water."
#message 13 "The knot is tied very tightly."
#message 14 "The rope is secured to the well with a very tight knot."
#message 15 "The thick rope resists your efforts."
#message 16 "You have nothing to cut the rope with."
#message 17 "Just before slitting the rope, you realize that it is not a very wise move at this time."
#message 18 "There is no reason to cut the rope."
#message 19 "You reach up out of the well water and cut the thick rope that holds the bucket."
#message 20 "You have other things to think about right now."
#message 21 "The rope is out of reach."
#message 22 "A person in your position is in no position to raise or lower anything."
#message 23 "I don't think that getting in the bucket right now will do you very much good."
#message 24 "You need to be closer to the water to drink."
#message 25 "There is no way for you to get water now."
#message 26 "Now is not the time to try diving."
#if VERSION_MAJOR >= 2
  #message 27 "It is a very long, sturdy rope."
#endif
#endif
