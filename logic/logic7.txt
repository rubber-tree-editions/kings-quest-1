#include "vars.txt"
#include "swimming-defs.txt"

#define PT_DEAD_GOAT 96, 137

#define BX_NEAR_LAKE 0, 36, 84, 167

#define rfPULLED_UNDERWATER rf0
#define rfPLAYED_SND_RUNNING_WATER rf1
#if RUBBER_TREE
  #define rfRESTORE_SWIMMING rf2
#endif

#if RUBBER_TREE
if (fUNDO && (vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING || fGAME_OVER)) {
  stop.sound();
  erase(oEGO);
  reset(fUNDO);
  reset(fSWIMMING_IMPOSSIBLE_HERE);
  set(fRESTORE_DROWN);
  reset(fEGO_PREOCCUPIED);
  if (vRESTORE_Y == 0) {
    vRESTORE_ROOM = ROOM8_WATERFALL_LAKE_WEST;
    vDROWN_GAME_OVER_COUNTDOWN = 0;
    vAQUATIC_ACTIVITY = AQUATICACTIVITY_SWIMMING;
    set(fSWIMMING);
    reset(fGAME_OVER);
    reset(fGAME_OVER_PREPARATION);
    new.room(ROOM8_WATERFALL_LAKE_WEST);
    return;
  }
  reset(rfPULLED_UNDERWATER);
  reset(rfDROWNING);
  position.v(oEGO, vRESTORE_X, vRESTORE_Y);
  start.motion(oEGO);
  if (rfRESTORE_SWIMMING) {
    vAQUATIC_ACTIVITY = AQUATICACTIVITY_SWIMMING;
    set(fEGO_ON_WATER);
    set(fSWIMMING);
    set.view(oEGO, 70);
    set(fCYCLE_EGO_ANIMATION);
  }
  else {
    vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
    reset(fEGO_ON_WATER);
    reset(fSWIMMING);
    set.view(oEGO, 0);
    reset(fCYCLE_EGO_ANIMATION);
  }
  if (vRESTORE_DIR == DIR_SOUTH) {
    set.loop(oEGO, 2);
  }
  else if (vRESTORE_DIR == DIR_NORTH) {
    set.loop(oEGO, 3);
  }
  else if (vRESTORE_DIR == DIR_EAST || vRESTORE_DIR == DIR_NORTHEAST || vRESTORE_DIR == DIR_SOUTHEAST) {
    set.loop(oEGO, 0);
  }
  else {
    set.loop(oEGO, 1);
  }
  vDROWN_GAME_OVER_COUNTDOWN = 0;
  draw(oEGO);
  player.control();

  if (fGAME_OVER) {
    reset(fGAME_OVER);
    reset(fGAME_OVER_PREPARATION);
    return;
  }
}
#endif

if (fROOM_SCRIPT_EXECUTED) {
  #if RUBBER_TREE
    vRESTORE_Y = 0;
  #endif
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  set.horizon(46);
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_RUSHING_WATER);
  }
  load.logics(LOGIC101_SWIMMING);
  call(LOGIC101_SWIMMING);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, PT_DEAD_GOAT, 0, 0);
  }
  if (vPREV_ROOM_NO == ROOM8_WATERFALL_LAKE_WEST) {
    #if RUBBER_TREE
    if (vRESTORE_ROOM == ROOM7_WATERFALL_LAKE_EAST) {
      vRESTORE_ROOM = ROOM_NULL;
      position(oEGO, 3, 155);
      set.loop(oEGO, 1);
      vAQUATIC_ACTIVITY = AQUATICACTIVITY_SWIMMING;
      set(fEGO_ON_WATER);
      set(fSWIMMING);
      set.view(oEGO, 70);
      set(fCYCLE_EGO_ANIMATION);
    }
    else
    #endif
    {
      get.posn(oEGO, vTEMP_X, vTEMP_Y);
      if (fEGO_ON_WATER && vTEMP_Y < 70) {
        position(oEGO, 2, 75);
      }
      if (!fEGO_ON_WATER && vTEMP_Y < 70) {
        position(oEGO, 2, 47);
        move.obj(oEGO, 2, 47, 1, fMISC_END_MARKER);
        #if RUBBER_TREE
          vRESTORE_X = 2;
          vRESTORE_Y = 47;
          vRESTORE_DIR = DIR_EAST;
        #endif
      }
    }
  }
  if (VERSION_MAJOR >= 2 && vPREV_ROOM_NO == ROOM10_GOAT_PEN_WEST) {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    if (vTEMP_X > 19) {
      position(oEGO, 34, 47);
    }
    if (vTEMP_X < 20) {
      position(oEGO, 2, 47);
      move.obj(oEGO, 2, 47, 1, fMISC_END_MARKER);
      #if RUBBER_TREE
        vRESTORE_X = 2;
        vRESTORE_Y = 47;
        vRESTORE_DIR = DIR_SOUTH;
      #endif
    }
  }
  if (vPREV_ROOM_NO == ROOM42_STONE_BRIDGE && fEGO_ON_WATER) {
    set.view(oEGO, 0);
    reset(fCYCLE_EGO_ANIMATION);
    vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
  }
  block(0, 126, 69, 147);
  ignore.blocks(oEGO);
  draw(oEGO);
  show.pic();
  if (BUILD_TARGET == APPLE_IIGS) {
    set(rfPLAYED_SND_RUNNING_WATER);
  }
}
if (BUILD_TARGET == APPLE_IIGS && !fEGO_ON_WATER && rfPLAYED_SND_RUNNING_WATER && !fEGO_PLAYING_FIDDLE) {
  sound(SND_RUSHING_WATER, rfPLAYED_SND_RUNNING_WATER);
}
if (VERSION_MAJOR >= 2 && said("examine", "room")) {
  print("A rapidly flowing stream is pouring into this lake.");
}
if (VERSION_MAJOR >= 2 && fSHOW_GOAT_LEFT_MESSAGE) {
  reset(fSHOW_GOAT_LEFT_MESSAGE);
  print("It seems the old goat has wandered off by himself and is no longer following you.");
}
if (posn(oEGO, 0, 45, 31, 78)) {
  set(fSWIMMING_IMPOSSIBLE_HERE);
}
else {
  reset(fSWIMMING_IMPOSSIBLE_HERE);
}
if (said("examine", "lake")) {
  print("This is a beautiful little lake.");
}
if (said("examine", "waterfall")) {
  print("There is a small waterfall splashing nearby.");
}
if (!fBUCKET_FILLED && !fEGO_ON_WATER && !fDRANK_WATER) {
  if (said("drink", "water") || said("get", "drink")) {
    if (posn(oEGO, BX_NEAR_LAKE)) {
      print("The clear water quenches your thirst.");
    }
    else {
      print("You might try that at the lake.");
    }
  }
}
if (!fBUCKET_FILLED && fCARRYING_BUCKET && !fEGO_ON_WATER && said("get", "water")) {
  if (posn(oEGO, BX_NEAR_LAKE)) {
    reset(fDRANK_WATER);
    print("The lake's waters pour into the bucket.");
    get("water");
    set(fBUCKET_FILLED);
    if (!fFILL_BUCKET_POINTS) {
      vSCORE += 2;
    }
    set(fFILL_BUCKET_POINTS);
  }
  else {
    print("You are not close enough to the lake.");
  }
}
if (fEGO_ON_WATER && posn(oEGO, 0, 60, 31, 76) && !rfPULLED_UNDERWATER) {
  set(rfPULLED_UNDERWATER);
  vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
  set.view(oEGO, 93);
  print("The swift water pulls you down to your untimely demise.");
}
if (!fEGO_ON_WATER) {
  if (posn(oEGO, 9, 45, 19, 52) || posn(oEGO, 4, 53, 19, 59)) {
    set(fEGO_ON_WATER);
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE && fEGO_ON_WATER) {
  vEGO_WATER_X = 255;
  if (posn(oEGO, 0, 45, 31, 68)) {
    vEGO_WATER_X = 10;
    vEGO_WATER_Y = 63;
  }
  if (vEGO_WATER_X == 255) {
    vEGO_WATER_X = 0;
  }
  else {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    vEGO_WATER_X -= vTEMP_X;
    vEGO_WATER_Y -= vTEMP_Y;
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (vEGO_EDGE_CODE != EDGE_NONE) {
  reset(fSWIMMING_IMPOSSIBLE_HERE);
  if (fGOAT_WONT_SWIM_V2) {
    reset(fGOAT_WONT_SWIM_V2);
    reset(fGOAT_COMPANION);
    set(fGOAT_IS_GONE);
    if (VERSION_MAJOR >= 2) {
      set(fSHOW_GOAT_LEFT_MESSAGE);
    }
  }
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM10_GOAT_PEN_WEST);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM6_POUCH_STUMP);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM8_WATERFALL_LAKE_WEST);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM42_STONE_BRIDGE);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
call(LOGIC101_SWIMMING);
if (BUILD_TARGET == APPLE_IIGS) {
  if (posn(oEGO, 0, 65, 77, 167)) {
    set(fTHREAT_OF_SORCERER_OR_OGRE);
    set(fTENSE_SITUATION);
    set(fFALL_DANGER);
  }
  else {
    reset(fTENSE_SITUATION);
    reset(fTHREAT_OF_SORCERER_OR_OGRE);
    reset(fFALL_DANGER);
  }
}
#if RUBBER_TREE
if (vAQUATIC_ACTIVITY != AQUATICACTIVITY_DROWNING && !fSWIMMING_IMPOSSIBLE_HERE) {
  get.posn(oEGO, vRESTORE_X, vRESTORE_Y);
  vRESTORE_DIR = vEGO_DIR;
  if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING) {
    set(rfRESTORE_SWIMMING);
  }
  else {
    reset(rfRESTORE_SWIMMING);
  }
}
#endif
return;

#message 1 "The lake's waters pour into the bucket."
#message 2 "The clear water quenches your thirst."
#message 3 "You are not close enough to the lake."
#message 4 "You might try that at the lake."
#message 5 "There is a small waterfall splashing nearby."
#message 6 "This is a beautiful little lake."
#message 7 "You have no container for water."
#message 8 "The swift water pulls you down to your untimely demise."
#if VERSION_MAJOR >= 2
  #message 9 "It seems the old goat has wandered off by himself and is no longer following you."
  #message 10 "A rapidly flowing stream is pouring into this lake."
#endif
