#include "vars.txt"

#define PT_ROCK_START 118, 133
#define PT_ROCK_MOVED 118, 145
#define PT_HOLE 122, 124
#define PT_EGO_CRUSHED 115, 140
#define PT_DEAD_GOAT 32, 75

#define BX_BEHIND_ROCK 115, 114, 133, 133
#define BX_IN_FRONT_OF_ROCK 118, 134, 133, 148
#define BX_NEAR_HOLE 112, 108, 134, 133

#define PRI_ROLLING_ROCK 15

#define rfROCK_MOVING_SAFE rf0
#define rfROCK_MOVING_DEADLY rf1

#if RUBBER_TREE
#define rvRESTORE_EGO_X rv0
#define rvRESTORE_EGO_Y rv1
#define rvRESTORE_EGO_DIR rv2
#define rvRESTORE_ROCK_X rv3
#define rvRESTORE_ROCK_Y rv4
#endif

#define oROCK o1
#define oHOLE o2

#if RUBBER_TREE
if (fGAME_OVER) {
  if (fUNDO && rfROCK_MOVING_DEADLY) {
    erase(oHOLE);

    erase(oROCK);
    observe.objs(oROCK);
    release.priority(oROCK);
    position.v(oROCK, rvRESTORE_ROCK_X, rvRESTORE_ROCK_Y);
    draw(oROCK);

    erase(oEGO);
    position.v(oEGO, rvRESTORE_EGO_X, rvRESTORE_EGO_Y);
    set.view(oEGO, 0);
    set.dir(oEGO, rvRESTORE_EGO_DIR);
    draw(oEGO);

    reset(fUNDO);
    reset(rfROCK_MOVING_DEADLY);
    reset(fGAME_OVER);
    reset(fMOVED_ROCK);
    player.control();
  }
  return;
}
#endif
if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_MOVING_ROCK);
  }
  set.horizon(46);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, PT_DEAD_GOAT, 0, 0);
  }
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_POINTS);
  }
  load.view(10);
  animate.obj(oROCK);
  set.view(oROCK, 10);
  if (!fMOVED_ROCK) {
    position(oROCK, PT_ROCK_START);
  }
  else {
    position(oROCK, PT_ROCK_MOVED);
  }
  load.view(112);
  animate.obj(oHOLE);
  set.view(oHOLE, 112);
  position(oHOLE, PT_HOLE);
  ignore.objs(oHOLE);
  load.view(114);
  draw(oROCK);
  if (fMOVED_ROCK) {
    draw(oHOLE);
  }
  draw(oEGO);
  show.pic();
}
if (VERSION_MAJOR >= 2 && said("examine", "room")) {
  print("You are in a forest clearing.  There is a large rock here.");
}
if (fMOVED_ROCK) {
  ignore.blocks(oEGO);
}
else {
  observe.blocks(oEGO);
}
if (!fSAID_ACCEPTED_USER_INPUT) {
  if (said("examine", "tree")) {
    print("There are numerous white birch trees reaching to the sky.");
  }
  distance(oEGO, oROCK, vTEMP_RESULT);
  if (said("examine", "rocks")) {
    if (!fMOVED_ROCK) {
      if (vTEMP_RESULT > 50) {
        print("There is a rock in the distance.");
      }
      else {
        print("You see a large, grey rock.");
      }
    }
    else {
      print("It is a large rock with a hole next to it.");
    }
  }
  if (said("get", "rocks")) {
    if (vTEMP_RESULT < 20) {
      print("This rock is far too heavy for you to carry.");
    }
    else {
      print("You are much too far away to even attempt getting the rock.");
    }
  }
}
if (said("shove", "rocks")) {
  if (!fMOVED_ROCK && !rfROCK_MOVING_SAFE) {
    if (!posn(oEGO, BX_BEHIND_ROCK) && !posn(oEGO, BX_IN_FRONT_OF_ROCK)) {
      print("It will be very difficult to move the rock from here.");
    }
    if (posn(oEGO, BX_BEHIND_ROCK)) {
      draw(oHOLE);
      stop.update(oHOLE);
      move.obj(oROCK, 118, 145, 0, fMOVED_ROCK);
      print("With a heave and a ho, you manage to move the rock... revealing a dark hole underneath it.");
      if (BUILD_TARGET == APPLE_IIGS) {
        sound(SND_MOVING_ROCK, fMISC_END_MARKER);
      }
      vSCORE += 2;
      set(rfROCK_MOVING_SAFE);
    }
    if (posn(oEGO, BX_IN_FRONT_OF_ROCK)) {
      #if RUBBER_TREE
        get.posn(oEGO, rvRESTORE_EGO_X, rvRESTORE_EGO_Y);
        rvRESTORE_EGO_DIR = vEGO_DIR;
        get.posn(oROCK, rvRESTORE_ROCK_X, rvRESTORE_ROCK_Y);
      #endif
      ignore.objs(oROCK);
      draw(oHOLE);
      stop.update(oHOLE);
      set(rfROCK_MOVING_DEADLY);
      set.priority(oROCK, PRI_ROLLING_ROCK);
      move.obj(oROCK, 118, 145, 0, fMOVED_ROCK);
      print("This moving rock rolls downhill and you, unfortunately,  are in the way.");
      if (BUILD_TARGET == APPLE_IIGS) {
        sound(SND_MOVING_ROCK, fMISC_END_MARKER);
      }
      program.control();
      set(fGAME_OVER);
      erase(oEGO);
      set.view(oEGO, 114);
      position(oEGO, PT_EGO_CRUSHED);
      draw(oEGO);
    }
  }
  if (fMOVED_ROCK) {
    print("After moving that rock once, even thinking about it should make you tired.");
  }
}
if (said("examine", "hole") || said("look inside", "hole")) {
  distance(oEGO, oHOLE, vTEMP_RESULT_2);
  if (fMOVED_ROCK && vTEMP_RESULT_2 < 15) {
    if (!fTAKEN_DAGGER) {
      print("There is an intricately carved dagger in the hole.");
    }
    else {
      print("There is nothing in this hole but dirt.");
    }
  }
  if (fMOVED_ROCK && vTEMP_RESULT_2 > 14) {
    print("You are too far from the hole to see in it.");
  }
  if (!fMOVED_ROCK) {
    print("There is no hole here.");
  }
}
if (said("examine", "dagger")) {
  if (!fTAKEN_DAGGER && fMOVED_ROCK) {
    print("You could see it better if you picked it up.");
  }
  if (!fMOVED_ROCK) {
    print("You do not have a dagger to look at.");
  }
}
if (said("get", "dagger")) {
  if (fMOVED_ROCK && !fTAKEN_DAGGER) {
    if (posn(oEGO, BX_NEAR_HOLE)) {
      if (BUILD_TARGET == APPLE_IIGS) {
        sound(SND_POINTS, fMISC_END_MARKER);
      }
      print("You reach into the hole and grasp the dagger, being careful not to cut yourself.");
      get("dagger");
      vSCORE += 5;
      set(fTAKEN_DAGGER);
      set(fCARRYING_DAGGER);
    }
    else {
      print(m7);
    }
  }
  if (!fMOVED_ROCK && !fTAKEN_DAGGER) {
    print("There is no dagger here.");
  }
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM14_BASE_GOLDEN_EGG_TREE);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM2_CASTLE_WEST);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM4_SERENE_LAKE_EAST);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM46_OGRE_STOMPING_GROUND);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
return;

#message 1 "There are numerous white birch trees reaching to the sky."
#message 2 "After moving that rock once, even thinking about it should make you tired."
#message 3 "There is no hole here."
#message 4 "There is an intricately carved dagger in the hole."
#message 5 "There is nothing in this hole but dirt."
#message 6 "There is no dagger here."
#if VERSION_MAJOR >= 2
  #message 7 "You are too far away to get the dagger."
#else
  #message 7 "You are to far away to get the dagger."
#endif
#message 8 "You reach into the hole and grasp the dagger, being careful not to cut yourself."
#message 10 "This rock is far too heavy for you to carry."
#message 11 "It will be very difficult to move the rock from here."
#message 12 "You are much too far away to even attempt getting the rock."
#message 13 "With a heave and a ho, you manage to move the rock... revealing a dark hole underneath it."
#message 14 "This moving rock rolls downhill and you, unfortunately,  are in the way."
#message 15 "You see a large, grey rock."
#message 16 "It is a large rock with a hole next to it."
#message 17 "There is a rock in the distance."
#message 18 "You could see it better if you picked it up."
#message 19 "You do not have a dagger to look at."
#message 20 "You are too far from the hole to see in it."
#if VERSION_MAJOR >= 2
  #message 21 "You are in a forest clearing.  There is a large rock here."
#endif
