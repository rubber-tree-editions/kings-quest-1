#include "vars.txt"
#include "swimming-defs.txt"

#define PT_DEAD_GOAT 128, 61

#if RUBBER_TREE
if (fUNDO && (vAQUATIC_ACTIVITY == AQUATICACTIVITY_DROWNING || fGAME_OVER)) {
  stop.sound();
  reset(fUNDO);
  reset(rfDROWNING);
  vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
  set(fRESTORE_DROWN);
  reset(fEGO_PREOCCUPIED);
  reset(fCYCLE_EGO_ANIMATION);
  reset(fEGO_ON_WATER);
  reset(fSWIMMING);
  erase(oEGO);
  set.view(oEGO, 0);
  position.v(oEGO, vRESTORE_X, vRESTORE_Y);
  if (vRESTORE_DIR == DIR_SOUTH) {
    set.loop(oEGO, 2);
  }
  else if (vRESTORE_DIR == DIR_NORTH) {
    set.loop(oEGO, 3);
  }
  else if (vRESTORE_DIR == DIR_EAST || vRESTORE_DIR == DIR_NORTHEAST || vRESTORE_DIR == DIR_SOUTHEAST) {
    set.loop(oEGO, 0);
  }
  else {
    set.loop(oEGO, 1);
  }
  draw(oEGO);
  player.control();
  if (fGAME_OVER) {
    reset(fGAME_OVER);
    reset(fGAME_OVER_PREPARATION);
    return;
  }
}
#endif

if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  set.horizon(55);
  load.logics(LOGIC101_SWIMMING);
  call(LOGIC101_SWIMMING);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, PT_DEAD_GOAT, 0, 0);
  }
  if (vPREV_ROOM_NO == ROOM44_OUTSIDE_WOODCUTTER_COTTAGE_FRONT) {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    if (vTEMP_X < 75) {
      position(oEGO, 10, 57);
    }
    if (vTEMP_X > 74) {
      position(oEGO, 140, 57);
    }
  }
  if (vPREV_ROOM_NO == ROOM28_OUTSIDE_GINGERBREAD_HOUSE) {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    if (vTEMP_X < 75) {
      position(oEGO, 5, 164);
    }
    if (vTEMP_X > 74) {
      position(oEGO, 144, 164);
    }
  }
  block(27, 59, 127, 167);
  ignore.blocks(oEGO);
  draw(oEGO);
  show.pic();
}
if (VERSION_MAJOR >= 2 && fSHOW_GOAT_LEFT_MESSAGE) {
  reset(fSHOW_GOAT_LEFT_MESSAGE);
  print("It seems the old goat has wandered off by himself and is no longer following you.");
}
if (said("examine", "lake")) {
  print("This lake looks refreshing, but a little swampy.");
}
if (said("examine", "tree")) {
  print("This is a very interesting tree, growing in the middle of the lake.");
}
if (!fEGO_ON_WATER) {
  if (posn(oEGO, 83, 108, 131, 143)
    || posn(oEGO, 37, 101, 82, 145)
    || posn(oEGO, 48, 37, 94, 100)
    || posn(oEGO, 39, 54, 100, 80)
    || posn(oEGO, 85, 146, 108, 155)
  ) {
    set(fEGO_ON_WATER);
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE && fEGO_ON_WATER) {
  vEGO_WATER_X = 255;
  if (posn(oEGO, 124, 119, 131, 141)) {
    vEGO_WATER_X = 112;
    vEGO_WATER_Y = 139;
  }
  if (posn(oEGO, 19, 56, 33, 74)) {
    vEGO_WATER_X = 30;
    vEGO_WATER_Y = 67;
  }
  if (vEGO_WATER_X == 255) {
    vEGO_WATER_X = 0;
  }
  else {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    vEGO_WATER_X -= vTEMP_X;
    vEGO_WATER_Y -= vTEMP_Y;
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (!fBUCKET_FILLED) {
  if (said("drink", "water") || said("get", "drink")) {
    print("In your thirst, even swamp water is satisfying.");
  }
}
if (!fBUCKET_FILLED && fCARRYING_BUCKET && said("get", "water")) {
  print("The bucket fills with the somewhat swampy water.");
  get("water");
  set(fBUCKET_FILLED);
  if (!fFILL_BUCKET_POINTS) {
    vSCORE += 2;
  }
  set(fFILL_BUCKET_POINTS);
}
if (vEGO_EDGE_CODE != EDGE_NONE) {
  if (fGOAT_WONT_SWIM_V2) {
    reset(fGOAT_WONT_SWIM_V2);
    reset(fGOAT_COMPANION);
    set(fGOAT_IS_GONE);
    if (VERSION_MAJOR >= 2) {
      set(fSHOW_GOAT_LEFT_MESSAGE);
    }
  }
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM44_OUTSIDE_WOODCUTTER_COTTAGE_FRONT);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM36_ROCK_WITH_TINY_HOLE);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM38_WILD_FLOWER_BED);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM28_OUTSIDE_GINGERBREAD_HOUSE);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
if (BUILD_TARGET == APPLE_IIGS) {
  get.posn(oEGO, vTEMP_X, vTEMP_Y);
  if (vTEMP_X > 5 && vTEMP_X < 150) {
    set(fTENSE_SITUATION);
    set(fTHREAT_OF_SORCERER_OR_OGRE);
    set(fFALL_DANGER);
  }
  else {
    reset(fTENSE_SITUATION);
    reset(fTHREAT_OF_SORCERER_OR_OGRE);
    reset(fFALL_DANGER);
  }
  if (posn(oEGO, 21, 71, 91, 122)) {
    set(fEGO_ON_WATER);
  }
}
call(LOGIC101_SWIMMING);
#if RUBBER_TREE
  if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_NONE) {
    get.posn(oEGO, vRESTORE_X, vRESTORE_Y);
    vRESTORE_DIR = vEGO_DIR;
  }
#endif
return;

#message 1 "The bucket fills with the somewhat swampy water."
#message 2 "In your thirst, even swamp water is satisfying."
#message 3 "This lake looks refreshing, but a little swampy."
#message 4 "This is a very interesting tree, growing in the middle of the lake."
#if VERSION_MAJOR >= 2
  #message 5 "It seems the old goat has wandered off by himself and is no longer following you."
#endif
