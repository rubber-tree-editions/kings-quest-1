#include "vars.txt"

#define PT_DEAD_GOAT 24, 110

#define rfINIT_RANDOMIZER rf0
#define rfDWARF_IS_HERE rf1
// unused: rf2
#define rfHAD_DWARF_ENCOUNTER rf3
#define rfFELL_FROM_BEANSTALK_LOW rf4
#define rfEGO_FINISHED_ANIMATING rf5
#define rfFALLEN_FROM_SKY rf6
#define rfPLAYING_SND_FALLING rf7
#define rfPLAYED_SND_FALLING rf8
#define rfPLAYED_SND_BEANSTALK rf9
#define rfPLAYING_SND_DWARF rf10
#define rfPLAYED_SND_DWARF rf11

#define rvCOUNTDOWN rv0
#define rvDWARF_STEP_SIZE rv1
#define rvOUCH_COUNTDOWN rv2

#define oDWARF o1

#if RUBBER_TREE
if (fUNDO && vRESTORE_ROOM != 0) {
  reset(fUNDO);
  stop.sound();
  if (vRESTORE_ROOM != vROOM_NO) {
    reset(fGAME_OVER);
    reset(fGAME_OVER_PREPARATION);
    vGAME_OVER_MESSAGE_COUNTDOWN = 40;
    new.room.v(vRESTORE_ROOM);
    return;
  }
  reset(rfFELL_FROM_BEANSTALK_LOW);
  end.of.loop(oEGO, fMISC_END_MARKER);
  vRESTORE_ROOM = 0;
  rvCOUNTDOWN = 0;
  erase(oEGO);
  reset(fCYCLE_EGO_ANIMATION);
  stop.cycling(oEGO);
  vTEMP_STEP_SIZE = EGO_STEP_SIZE;
  step.size(oEGO, vTEMP_STEP_SIZE);
  position.v(oEGO, vRESTORE_X, vRESTORE_Y);
  vEGO_DIR = 0;
  set.view(oEGO, 74);
  set.priority(oEGO, 8);
  set(fEGO_CLIMBING_BEANSTALK);
  if (BUILD_TARGET == APPLE_IIGS) {
    set(fTENSE_SITUATION);
    set(fTHREAT_OF_SORCERER_OR_OGRE);
    set(fFALL_DANGER);
  }
  draw(oEGO);
  player.control();
  if (fGAME_OVER) {
    reset(fGAME_OVER);
    reset(fGAME_OVER_PREPARATION);
    return;
  }
}
#endif

if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_ROBBED);
  }
  set.horizon(44);
  load.sound(SND_OUCH);
  if (BUILD_TARGET != APPLE_IIGS) {
    load.sound(SND_FALLING);
  }
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, PT_DEAD_GOAT, 0, 0);
  }
  if (fCARRYING_MAGIC_BEANS || vBEANSTALK_ROOM == ROOM35_DWARF_MEADOW) {
    vTEMP_PIC = 84;
    set(fINIT_BEANSTALK);
    load.pic(vTEMP_PIC);
    load.view(114);
    load.view(103);
    load.view(104);
    load.view(74);
    load.view(105);
    load.logics(LOGIC104_BEANSTALK);
    if (BUILD_TARGET == APPLE_IIGS) {
      set(fFALL_DANGER);
    }
    else {
      load.sound(SND_BEANSTALK);
    }
  }
  if (BUILD_TARGET == APPLE_IIGS && vPREV_ROOM_NO == ROOM70_BEANSTALK_NEAR_BOTTOM) {
    set(fTENSE_SITUATION);
    set(fTHREAT_OF_SORCERER_OR_OGRE);
    set(fFALL_DANGER);
    load.sound(SND_FALLING);
  }
  if (vPREV_ROOM_NO == ROOM70_BEANSTALK_NEAR_BOTTOM && fEGO_CLIMBING_BEANSTALK) {
    set.view(oEGO, 74);
    position(oEGO, 64, 41);
    #if RUBBER_TREE
      vRESTORE_X = 64;
      vRESTORE_Y = 41;
    #endif
    move.obj(oEGO, 64, 41, 0, fMISC_END_MARKER);
    set.priority(oEGO, 8);
  }
  if (vPREV_ROOM_NO == ROOM70_BEANSTALK_NEAR_BOTTOM && fFALLING_TO_EARTH) {
    if (BUILD_TARGET == APPLE_IIGS) {
      prevent.input();
    }
    program.control();
    ignore.horizon(oEGO);
    set.priority(oEGO, 15);
    set.view(oEGO, 105);
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    if (vTEMP_X > 75) {
      position(oEGO, 80, 29);
    }
    else {
      position(oEGO, 65, 29);
    }
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    vTEMP_Y = 106;
    vTEMP_STEP = 2;
    move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFALLEN_FROM_SKY);
  }
  random(0, 250, vTEMP_RESULT);
  #if RUBBER_TREE
    if (vTREASURE_COUNT > 0 && !fCARRYING_DIAMONDS && !fCARRYING_GOLD_WALNUT && !fCARRYING_GOLDEN_EGG && !fCARRYING_POUCH && !fCARRYING_SCEPTRE) {
      vTEMP_RESULT = 250;
    }
  #endif
  #if BUILD_TARGET == APPLE_IIGS
  if (vTEMP_RESULT < 125) {
  #else
  if (vTEMP_RESULT < 85) {
  #endif
    rvDWARF_STEP_SIZE = 4;
    step.size(oDWARF, rvDWARF_STEP_SIZE);
    load.view(111);
    animate.obj(oDWARF);
    set.view(oDWARF, 111);
    set(rfINIT_RANDOMIZER);
    load.sound(SND_VILLAIN);
    if (BUILD_TARGET != APPLE_IIGS) {
      load.sound(SND_DWARF);
    }
  }
  if (rfINIT_RANDOMIZER) {
    do {
      random(0, 250, vTEMP_RESULT_2);
    } while (vTEMP_RESULT_2 > 90);
  }
  if (vBEANSTALK_ROOM == ROOM35_DWARF_MEADOW) {
    overlay.pic(vTEMP_PIC);
  }
  draw(oEGO);
  show.pic();
}
if (rfDWARF_IS_HERE && fSOUND_END_MARKER) {
  if (!rfPLAYING_SND_DWARF) {
    set(rfPLAYING_SND_DWARF);
    if (BUILD_TARGET == APPLE_IIGS) {
      set(rfPLAYED_SND_DWARF);
    }
    else {
      sound(SND_DWARF, rfPLAYED_SND_DWARF);
    }
  }
  if (rfPLAYED_SND_DWARF) {
    reset(rfPLAYING_SND_DWARF);
    reset(rfPLAYED_SND_DWARF);
  }
}
if (fFALLING_TO_EARTH && !rfPLAYING_SND_FALLING) {
  set(rfPLAYING_SND_FALLING);
  set(f135_UNKNOWN);
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_FALLING);
  }
  sound(SND_FALLING, rfPLAYED_SND_FALLING);
}
if (VERSION_MAJOR < 2 && !rfFALLEN_FROM_SKY && rfPLAYED_SND_FALLING) {
  reset(rfPLAYING_SND_FALLING);
  reset(rfPLAYED_SND_FALLING);
}
if (rfFALLEN_FROM_SKY) {
  stop.sound();
  set(rfPLAYING_SND_FALLING);
  reset(fFALLING_TO_EARTH);
  reset(f135_UNKNOWN);
  set.view(oEGO, 114);
  shake.screen(2);
  set(fGAME_OVER);
  if (BUILD_TARGET == APPLE_IIGS) {
    accept.input();
  }
}
vTEMP_RESULT_2--;
if (vTEMP_RESULT_2 == 1 && !fFALLING_TO_EARTH && !fEGO_CLIMBING_BEANSTALK) {
  position(oDWARF, 16, 79);
  set(rfDWARF_IS_HERE);
  sound(SND_VILLAIN, fSOUND_END_MARKER);
  draw(oDWARF);
  if (!fGOAT_COMPANION) {
    print("There is a small dwarf close by.  It would be a good idea to be careful.");
    follow.ego(oDWARF, 7, fVILLAIN_GOT_YOU);
  }
  if (fGOAT_COMPANION) {
    wander(oDWARF);
    set(rfHAD_DWARF_ENCOUNTER);
    print("There is a small dwarf close by.  It would be a good idea to be careful.");
    print("The dwarf sees the goat and decides to leave.");
  }
}
if (!rfDWARF_IS_HERE) {
  if (said("anyword", "dwarf")) {
    print("There is no dwarf here.");
  }
}
if (rfDWARF_IS_HERE) {
  if (said("examine", "dwarf")) {
    print("Dwarfs are quick, little guys who will try to take your treasure.");
  }
  if (said("murder", "dwarf")) {
    print("He's too quick for you to catch.");
  }
  if (said("talk", "dwarf") || said("hello") || said("say", "hello") || said("hello", "dwarf")) {
    print("No time to talk to him.  He's in too much of a hurry!");
  }
}
if (fVILLAIN_GOT_YOU) {
  reset(fVILLAIN_GOT_YOU);
  if (fPROTECTED_BY_SPELL) {
    print("It's a good thing you are protected by a spell.  That little dwarf likes to steal treasures.");
    wander(oDWARF);
    set(rfHAD_DWARF_ENCOUNTER);
  }
  else if (fEGO_INVISIBLE) {
    print("Being invisible has protected you from the dwarf.");
    wander(oDWARF);
    set(rfHAD_DWARF_ENCOUNTER);
    #if RUBBER_TREE
    set(fUSED_INVISIBILITY);
    #endif
  }
  else {
    #if !RUBBER_TREE
    if (fCARRYING_MIRROR) {
      reset(fCARRYING_MIRROR);
      set(fDWARF_STOLE_MIRROR);
      vSCORE -= 8;
      drop("magic mirror");
      set(fLOST_VITAL_TREASURE);
      reset(fNO_BUSINESS_WITH_KING);
      vTREASURE_COUNT--;
    }
    else if (fCARRYING_SHIELD) {
      reset(fCARRYING_SHIELD);
      set(fDWARF_STOLE_SHIELD);
      vSCORE -= 8;
      drop("shield");
      set(fLOST_VITAL_TREASURE);
      reset(fNO_BUSINESS_WITH_KING);
      vTREASURE_COUNT--;
    }
    else if (fCARRYING_CHEST) {
      reset(fCARRYING_CHEST);
      set(fDWARF_STOLE_CHEST);
      vSCORE -= 8;
      drop("chest");
      set(fLOST_VITAL_TREASURE);
      reset(fNO_BUSINESS_WITH_KING);
      vTREASURE_COUNT--;
    }
    else
    #endif
    if (fCARRYING_DIAMONDS) {
      reset(fCARRYING_DIAMONDS);
      set(fDWARF_OR_TROLL_HAS_DIAMONDS);
      vSCORE -= 6;
      drop("pouch of diamonds");
    }
    else if (fCARRYING_GOLD_WALNUT) {
      reset(fCARRYING_GOLD_WALNUT);
      set(fDWARF_OR_TROLL_HAS_WALNUT);
      vSCORE -= 6;
      drop("gold walnut");
    }
    else if (fCARRYING_GOLDEN_EGG) {
      reset(fCARRYING_GOLDEN_EGG);
      set(fDWARF_OR_TROLL_HAS_EGG);
      vSCORE -= 6;
      drop("gold egg");
    }
    else if (fCARRYING_POUCH) {
      reset(fCARRYING_POUCH);
      set(fDWARF_HAS_POUCH);
      vSCORE -= 3;
      drop("pouch");
    }
    else if (fCARRYING_SCEPTRE) {
      reset(fCARRYING_SCEPTRE);
      set(fDWARF_OR_TROLL_HAS_SCEPTRE);
      vSCORE -= 6;
      drop("sceptre");
    }
    else {
      print("The quick, little dwarf came by to see what you had -- nothing interested him.");
      wander(oDWARF);
      set(rfHAD_DWARF_ENCOUNTER);
      goto(END_OF_DWARF_LOGIC);
    }
    if (BUILD_TARGET == APPLE_IIGS) {
      sound(SND_ROBBED, fMISC_END_MARKER);
    }
    print("That little dwarf caught you by surprise.  Is your treasure still OK?");
    wander(oDWARF);
    set(rfHAD_DWARF_ENCOUNTER);
END_OF_DWARF_LOGIC:
  }
}
if (rfHAD_DWARF_ENCOUNTER && vOBJECT_EDGE_CODE != 0) {
  erase(oDWARF);
  reset(rfHAD_DWARF_ENCOUNTER);
  reset(rfDWARF_IS_HERE);
}
if (fCARRYING_MAGIC_BEANS && fINIT_BEANSTALK) {
  if (said("plant", "magic beans")) {
    reset(fCARRYING_MAGIC_BEANS);
    vBEANSTALK_ROOM = ROOM35_DWARF_MEADOW;
    set(fMAGIC_BEANS_PLANTED);
    drop("beans");
    vSCORE += 2;
    if (BUILD_TARGET == APPLE_IIGS) {
      load.sound(SND_BEANSTALK);
    }
    print("The beans immediately sprout roots that reach deep into the fertile soil... leaves unfold themselves to the warm, loving sun... a rumbling is felt... and a mighty beanstalk now stretches up into the sky!");
    sound(SND_BEANSTALK, rfPLAYED_SND_BEANSTALK);
    overlay.pic(vTEMP_PIC);
    show.pic();
    if (BUILD_TARGET == APPLE_IIGS) {
      set.simple(12);
      load.sound(SND_FALLING);
    }
  }
}
if (vBEANSTALK_ROOM == ROOM35_DWARF_MEADOW && !fEGO_INVISIBLE) {
  if (said("climb", "beanstalk") && !fEGO_CLIMBING_BEANSTALK) {
    if (posn(oEGO, 52, 76, 103, 97)) {
      if (BUILD_TARGET == APPLE_IIGS) {
        set(fTENSE_SITUATION);
        set(fTHREAT_OF_SORCERER_OR_OGRE);
        set(fFALL_DANGER);
        load.sound(SND_FALLING);
      }
      erase(oEGO);
      ignore.blocks(oEGO);
      set.view(oEGO, 74);
      set(fEGO_CLIMBING_BEANSTALK);
      position(oEGO, 71, 77);
      set.priority(oEGO, 8);
      draw(oEGO);
      move.obj(oEGO, 71, 77, 0, fMISC_END_MARKER);
    }
    else {
      print("You can't reach the beanstalk from here.");
    }
  }
}
if (vBEANSTALK_ROOM != ROOM35_DWARF_MEADOW) {
  if (said("climb", "beanstalk")) {
    print("There is no beanstalk here to climb.");
  }
}
if (fEGO_CLIMBING_BEANSTALK) {
  if (fEGO_TOUCHED_TRIGGER_LINE && posn(oEGO, 60, 78, 93, 80)) {
    if (BUILD_TARGET == APPLE_IIGS) {
      reset(fEGO_CLIMBING_BEANSTALK);
      reset(fFALLING);
    }
    erase(oEGO);
    set.view(oEGO, 0);
    observe.blocks(oEGO);
    if (BUILD_TARGET != APPLE_IIGS) {
      reset(fEGO_CLIMBING_BEANSTALK);
    }
    position(oEGO, 70, 106);
    release.priority(oEGO);
    draw(oEGO);
    if (BUILD_TARGET == APPLE_IIGS) {
      accept.input();
      reset(fTENSE_SITUATION);
      reset(fTHREAT_OF_SORCERER_OR_OGRE);
      reset(fFALL_DANGER);
    }
  }
  if (fEGO_TOUCHED_TRIGGER_LINE && !posn(oEGO, 60, 78, 93, 80)) {
    program.control();
    #if RUBBER_TREE
      vRESTORE_ROOM = vROOM_NO;
    #endif
    if (BUILD_TARGET == APPLE_IIGS) {
      prevent.input();
      set(fFALLING);
      set(fTENSE_SITUATION);
      set(fTHREAT_OF_SORCERER_OR_OGRE);
      set(fFALL_DANGER);
    }
    set.priority(oEGO, 15);
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    erase(oEGO);
    set.view(oEGO, 105);
    reset(fEGO_CLIMBING_BEANSTALK);
    position.v(oEGO, vTEMP_X, vTEMP_Y);
    draw(oEGO);
    vTEMP_Y = 106;
    vTEMP_STEP = 2;
    move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFELL_FROM_BEANSTALK_LOW);
    set(f135_UNKNOWN);
    if (BUILD_TARGET == APPLE_IIGS) {
      load.sound(SND_FALLING);
    }
    sound(SND_FALLING, fSOUND_END_MARKER_2);
  }
}
rvCOUNTDOWN--;
if (rfFELL_FROM_BEANSTALK_LOW) {
  stop.sound();
  reset(rfFELL_FROM_BEANSTALK_LOW);
  observe.blocks(oEGO);
  release.priority(oEGO);
  stop.motion(oEGO);
  set.view(oEGO, 103);
  rvCOUNTDOWN = 20;
  set(fCYCLE_EGO_ANIMATION);
  shake.screen(2);
  #if BUILD_TARGET == APPLE_IIGS
  if (!fSOUND_ENABLED)
  #endif
  {
    print("Ouch!");
  }
  set(f135_UNKNOWN);
  if (BUILD_TARGET == APPLE_IIGS) {
    rvOUCH_COUNTDOWN = 5;
  }
  else {
    sound(SND_OUCH, fSOUND_END_MARKER);
  }
}
if (BUILD_TARGET == APPLE_IIGS) {
  if (rvCOUNTDOWN > 0) {
    rvOUCH_COUNTDOWN--;
    if (rvOUCH_COUNTDOWN == 1) {
      rvOUCH_COUNTDOWN = 5;
      sound(SND_OUCH, fSOUND_END_MARKER);
    }
  }
}
else if (fSOUND_END_MARKER) {
  if (rvCOUNTDOWN > 0) {
    reset(fSOUND_END_MARKER);
    sound(SND_OUCH, fSOUND_END_MARKER);
  }
}
if (rvCOUNTDOWN == 1) {
  set.view(oEGO, 104);
  end.of.loop(oEGO, rfEGO_FINISHED_ANIMATING);
}
if (rfEGO_FINISHED_ANIMATING) {
  reset(rfEGO_FINISHED_ANIMATING);
  reset(fCYCLE_EGO_ANIMATION);
  #if RUBBER_TREE
    vRESTORE_ROOM = 0;
  #endif
  start.motion(oEGO);
  set.view(oEGO, 0);
  release.priority(oEGO);
  player.control();
  if (BUILD_TARGET == APPLE_IIGS) {
    accept.input();
    reset(fTENSE_SITUATION);
    reset(fTHREAT_OF_SORCERER_OR_OGRE);
    reset(fFALL_DANGER);
  }
}
if (vEGO_EDGE_CODE != EDGE_NONE) {
  reset(fINIT_BEANSTALK);
}
if (vEGO_EDGE_CODE == EDGE_HORIZON && fEGO_CLIMBING_BEANSTALK) {
  new.room(ROOM70_BEANSTALK_NEAR_BOTTOM);
}
#if BUILD_TARGET == APPLE_IIGS
if (vEGO_EDGE_CODE == EDGE_HORIZON && !fEGO_CLIMBING_BEANSTALK && !fFALLING_TO_EARTH) {
#else
if (vEGO_EDGE_CODE == EDGE_HORIZON && !fEGO_CLIMBING_BEANSTALK) {
#endif
  new.room(ROOM46_OGRE_STOMPING_GROUND);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM34_PEBBLY_RIVER_BANK);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM36_ROCK_WITH_TINY_HOLE);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM30_WALNUT_TREE);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
if (vBEANSTALK_ROOM == ROOM35_DWARF_MEADOW) {
  call(LOGIC104_BEANSTALK);
}
#if RUBBER_TREE
  if (fEGO_CLIMBING_BEANSTALK && vRESTORE_ROOM == 0) {
    get.posn(oEGO, vRESTORE_X, vRESTORE_Y);
  }
#endif
return;

#message 1 "There is a small dwarf close by.  It would be a good idea to be careful."
#message 2 "That little dwarf caught you by surprise.  Is your treasure still OK?"
#message 3 "The quick, little dwarf came by to see what you had -- nothing interested him."
#message 4 "Dwarfs are quick, little guys who will try to take your treasure."
#message 5 "There is no dwarf here."
#message 6 "He's too quick for you to catch."
#message 7 "No time to talk to him.  He's in too much of a hurry!"
#message 8 "It's a good thing you are protected by a spell.  That little dwarf likes to steal treasures."
#message 9 "The beans immediately sprout roots that reach deep into the fertile soil... leaves unfold themselves to the warm, loving sun... a rumbling is felt... and a mighty beanstalk now stretches up into the sky!"
#message 10 "You can't reach the beanstalk from here."
#message 11 "There is no beanstalk here to climb."
#message 12 "Ouch!"
#message 13 "The dwarf sees the goat and decides to leave."
#message 14 "Being invisible has protected you from the dwarf."
