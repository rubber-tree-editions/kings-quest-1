#include "vars.txt"

#define PT_DEAD_GOAT 107, 81

#define BX_NEAR_WELL 10, 100, 75, 150
#define BX_NEAR_BUCKET 10, 109, 71, 153
#define BX_NEAR_HANDLE 60, 108, 77, 140
#define BX_NEAR_ROPE 60, 108, 77, 129

#define PRI_WELL 11

#define rfFALLEN_INTO_WELL rf0
#define rfBUCKET_DESCENDED rf1
#define rfBUCKET_ASCENDED rf2
#define rfROPE_ASCENDED rf3
#define rfROPE_DESCENDED rf4
#define rfBUCKET_DESCENDED_WITH_YOU_IN_IT rf5
#define rfCLIMBED_INTO_WELL rf6
#define rfJUMPED_INTO_WELL rf7
#define rfENTERED_WELL rf8
#define rfFELL_OFF_ROPE rf9
#define rfPLAYED_SND_WELL_HANDLE_TURNING rf10

#define oHANDLE o1
#define oBUCKET o2
#define oROPE o3

#if RUBBER_TREE
if (fUNDO) {
  if (vWELL_MODE != WELLMODE_NONE) {
    stop.sound();
    reset(fUNDO);
    erase(oEGO);
    stop.motion(oEGO);
    if (vWELL_MODE == WELLMODE_JUMP_OR_FALL_IN) {
      position(oEGO, 48, 111);
      set.view(oEGO, 0);
      set.loop(oEGO, 2);
      release.priority(oEGO);
      observe.blocks(oEGO);
      reset(rfFALLEN_INTO_WELL);
      reset(rfENTERED_WELL);
      reset(rfJUMPED_INTO_WELL);
    }
    else {
      if (fBUCKET_ROPE_CUT) {
        set.view(oEGO, 143);
      }
      else {
        set.view(oEGO, 74);
      }
      set(fON_WELL_ROPE);
      position.v(oEGO, vRESTORE_X, vRESTORE_Y);
      //position(oEGO, 38, 140);
      set.priority(oEGO, PRI_WELL);
      ignore.blocks(oEGO);
    }
    draw(oEGO);
    player.control();
    vWELL_MODE = WELLMODE_NONE;
  }
}
#endif

if (fROOM_SCRIPT_EXECUTED) {
  #if RUBBER_TREE
    if (fROPE_GONE && !fCARRYING_MIRROR && vDRAGON_STATE != DRAGONSTATE_ABSENT) {
      reset(fROPE_GONE);
      if (!fCARRYING_BUCKET) {
        reset(fBUCKET_ROPE_CUT);
        set(fBUCKET_LOWERED);
      }
      else {
        set(fROPE_DANGLING_IN_WELL);
      }
    }
  #endif
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  if (BUILD_TARGET == APPLE_IIGS) {
    load.sound(SND_POINTS);
  }
  set.horizon(46);
  if (BUILD_TARGET != APPLE_IIGS) {
    load.sound(SND_FALLING);
  }
  load.sound(SND_WELL_HANDLE_TURNING);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, PT_DEAD_GOAT, 0, 0);
  }
  load.view(74);
  load.view(143);
  load.view(18);
  animate.obj(oHANDLE);
  set.view(oHANDLE, 18);
  position(oHANDLE, 66, 96);
  ignore.objs(oHANDLE);
  set.priority(oHANDLE, PRI_WELL);
  set.cel(oHANDLE, 4);
  if (!fBUCKET_ROPE_CUT) {
    load.view(72);
    load.view(16);
    animate.obj(oBUCKET);
    set.view(oBUCKET, 16);
    ignore.blocks(oBUCKET);
    position(oBUCKET, 37, 120);
    set.priority(oBUCKET, PRI_WELL);
    if (!fBUCKET_LOWERED) {
      set.cel(oBUCKET, 0);
    }
    if (fBUCKET_LOWERED) {
      set.cel(oBUCKET, 7);
    }
  }
  if (!fROPE_GONE) {
    load.view(17);
    animate.obj(oROPE);
    set.view(oROPE, 17);
    ignore.blocks(oROPE);
    if (VERSION_MAJOR >= 2) {
      ignore.objs(oROPE);
    }
    position(oROPE, 43, 147);
    set.priority(oROPE, PRI_WELL);
    if (!fROPE_DANGLING_IN_WELL) {
      set.cel(oROPE, 0);
    }
    if (fROPE_DANGLING_IN_WELL) {
      set.cel(oROPE, 2);
    }
  }
  if (vPREV_ROOM_NO == ROOM49_INSIDE_WELL) {
    #if RUBBER_TREE
    if (vWELL_MODE == WELLMODE_JUMP_OR_FALL_IN) {
      position(oEGO, 48, 111);
      set.view(oEGO, 0);
      set.loop(oEGO, 2);
      release.priority(oEGO);
      observe.blocks(oEGO);
      vWELL_MODE = WELLMODE_NONE;
      reset(fGAME_OVER);
      player.control();
    }
    else
    #endif
    {
      if (fBUCKET_ROPE_CUT) {
        set.view(oEGO, 143);
      }
      else {
        set.view(oEGO, 74);
      }
      set(fON_WELL_ROPE);
      #if RUBBER_TREE
        if (vWELL_MODE == WELLMODE_FALL_FROM_ROPE_TOP) {
          position.v(oEGO, vRESTORE_X, vRESTORE_Y);
          vWELL_MODE = WELLMODE_NONE;
          reset(fGAME_OVER);
          stop.motion(oEGO);
          set.priority(oEGO, PRI_WELL);
          ignore.blocks(oEGO);
          player.control();
        }
        else {
          position(oEGO, 38, 140);
          set.priority(oEGO, PRI_WELL);
          ignore.blocks(oEGO);
          move.obj(oEGO, 38, 140, 0, fMISC_END_MARKER);
        }
      #else
        position(oEGO, 38, 140);
        set.priority(oEGO, PRI_WELL);
        ignore.blocks(oEGO);
        move.obj(oEGO, 38, 140, 0, fMISC_END_MARKER);
      #endif
    }
  }
  if (vPREV_ROOM_NO == ROOM5_SERENE_LAKE_WEST) {
    if (fEGO_ON_WATER) {
      set.view(oEGO, 0);
      reset(fCYCLE_EGO_ANIMATION);
      vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
    }
  }
  draw(oHANDLE);
  stop.update(oHANDLE);
  if (!fBUCKET_ROPE_CUT) {
    draw(oBUCKET);
    stop.update(oBUCKET);
  }
  if (fBUCKET_ROPE_CUT && !fROPE_GONE) {
    draw(oROPE);
    stop.cycling(oROPE);
  }
  draw(oEGO);
  show.pic();
}
if (said("examine", "flowers")) {
  print("They raise their colorful faces to the sun.");
}
if (!fCARRYING_BUCKET) {
  if (said("get", "water")) {
    print("All the water is at the bottom of the well.");
  }
}
if (fCARRYING_BUCKET && !fBUCKET_FILLED) {
  if (said("get", "water")) {
    print("Somebody has cut the rope;  there's no way for you to get the bucket to the well's bottom.");
  }
}
if (!fGOAT_COMPANION && !fEGO_INVISIBLE) {
  if (posn(oEGO, BX_NEAR_WELL)) {
    if (fBUCKET_LOWERED || fROPE_DANGLING_IN_WELL) {
      if (said("climb", "rope")
        || said("climb", "well")
        || said("go", "well")
        || said("go down", "well")
        || said("slide", "rope")
      ) {
        erase(oEGO);
        if (fBUCKET_ROPE_CUT) {
          set.view(oEGO, 143);
        }
        else {
          set.view(oEGO, 74);
        }
        if (VERSION_MAJOR >= 2) {
          vEGO_DIR = DIR_NONE;
        }
        position(oEGO, 39, 131);
        draw(oEGO);
        set(fON_WELL_ROPE);
        set.priority(oEGO, PRI_WELL);
        ignore.blocks(oEGO);
        move.obj(oEGO, 39, 132, 0, fMISC_END_MARKER);
      }
    }
    if (!fBUCKET_LOWERED && !fROPE_DANGLING_IN_WELL) {
      if (said("climb", "well")) {
        print("The sides of this well are too slippery to climb down.");
      }
      if (said("climb", "rope") || said("slide", "rope")) {
        print("The rope does not go down the well very far.");
      }
    }
    if (!fBUCKET_ROPE_CUT && !fBUCKET_LOWERED) {
      if (said("climb", "bucket")
        || said("go", "bucket")
        || said("go", "well")
        || said("go down", "well")
#if VERSION_MAJOR >= 2
        || said("get in", "bucket")
#endif
      ) {
        erase(oEGO);
        set.view(oBUCKET, 72);
        position(oBUCKET, 38, 145);
        set.priority(oBUCKET, PRI_WELL);
        ignore.blocks(oBUCKET);
        set.cel(oBUCKET, 0);
        start.update(oBUCKET);
        erase(oBUCKET);
        stop.cycling(oBUCKET);
        draw(oBUCKET);
        set(fIN_WELL_BUCKET);
        if (BUILD_TARGET != APPLE_IIGS) {
          sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
        }
        end.of.loop(oBUCKET, rfBUCKET_DESCENDED_WITH_YOU_IN_IT);
        start.update(oHANDLE);
        start.cycling(oHANDLE);
        print("After you are in the old bucket, your weight causes it to slowly descend.");
        if (BUILD_TARGET == APPLE_IIGS) {
          sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
        }
      }
    }
    if (fBUCKET_LOWERED && !fBUCKET_ROPE_CUT) {
      if (
        said("climb", "bucket")
        || said("go", "bucket")
#if VERSION_MAJOR >= 2
        || said("get in", "bucket")
#endif
      ) {
        print("The old bucket is at the bottom of the well.");
      }
    }
    if (fBUCKET_ROPE_CUT) {
      if (
        said("climb", "bucket")
        || said("go", "bucket")
#if VERSION_MAJOR >= 2
        || said("get in", "bucket")
#endif
      ) {
        print("There is no bucket here.");
      }
    }
    if (fBUCKET_ROPE_CUT && !fROPE_DANGLING_IN_WELL) {
      if (said("go", "well") || said("go down", "well")) {
        set(rfCLIMBED_INTO_WELL);
        set(rfENTERED_WELL);
      }
    }
    if (said("jump", "well")) {
      set(rfJUMPED_INTO_WELL);
      set(rfENTERED_WELL);
    }
    if (said("untie", "rope")) {
      print("The knots on the rope are too tight to untie.");
    }
  }
}
if (!posn(oEGO, BX_NEAR_WELL)) {
  if (said("climb", "rope")
    || said("go", "well")
    || said("go down", "well")
    || said("jump", "well")
    || said("slide", "rope")
    || said("go", "bucket")
#if VERSION_MAJOR >= 2
    || said("get in", "bucket")
#endif
  ) {
    print("You need to be closer to do that.");
  }
}
if (fGOAT_COMPANION && !fEGO_INVISIBLE) {
  if (posn(oEGO, BX_NEAR_WELL)) {
    if (said("climb", "rope")) {
      print("The goat sure doesn't want to climb the rope.");
    }
    if (said("climb", "well")) {
      print("The goat sure doesn`t want to climb down the well with you.");
    }
    if (said("climb", "bucket")) {
      print("The goat refuses to do down the well.");
    }
    if (
      said("go", "bucket")
#if VERSION_MAJOR >= 2
      || said("get in", "bucket")
#endif
    ) {
      print("That bucket isn't big enough for you and that big goat!");
    }
    if (said("go", "well")) {
      print("The goat refuses to enter the dark well.");
    }
    if (said("go down", "well")) {
      print("The goat refuses to go down into the dark well.");
    }
    if (said("slide", "rope")) {
      print("The goat doesn`t want to slide down the rope.");
    }
    if (said("jump", "well")) {
      print("The goat is afraid of heights and refuses to jump down the well.");
    }
  }
}
if (fEGO_INVISIBLE) {
  if (posn(oEGO, BX_NEAR_WELL)) {
    if (said("climb", "rope")
      || said("go", "bucket")
      || said("go", "well")
      || said("go down", "well")
      || said("slide", "rope")
      || said("jump", "well")
#if VERSION_MAJOR >= 2
      || said("get in", "bucket")
#endif
    ) {
      print("You can't do that when you are invisible!");
    }
  }
}
if (fON_WELL_ROPE) {
  get.posn(oEGO, vTEMP_X, vTEMP_Y);
  if (vTEMP_Y < 131) {
    erase(oEGO);
    set.view(oEGO, 0);
    position(oEGO, 48, 111);
    draw(oEGO);
    release.priority(oEGO);
    observe.blocks(oEGO);
    reset(fON_WELL_ROPE);
  }
  if (vTEMP_Y > 145) {
    new.room(ROOM49_INSIDE_WELL);
  }
  if (vTEMP_X < 35 || vTEMP_X > 44) {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    #if RUBBER_TREE
      vRESTORE_X = 40;
      vRESTORE_Y = vTEMP_Y;
      if (vRESTORE_Y > 145) {
        vRESTORE_Y = 145;
      }
      vWELL_MODE = WELLMODE_FALL_FROM_ROPE_TOP;
    #endif
    vTEMP_Y = 145;
    vTEMP_STEP = 3;
    move.obj.v(oEGO, vTEMP_X, vTEMP_Y, vTEMP_STEP, rfFELL_OFF_ROPE);
    print("You should be more careful the next time you try  climbing ropes.");
    set(f135_UNKNOWN);
    if (BUILD_TARGET == APPLE_IIGS) {
      set(fSOUND_END_MARKER);
    }
    else {
      sound(SND_FALLING, fSOUND_END_MARKER);
    }
    reset(fON_WELL_ROPE);
  }
}
if (rfFELL_OFF_ROPE || rfFALLEN_INTO_WELL) {
  reset(rfFELL_OFF_ROPE);
  reset(rfFALLEN_INTO_WELL);
  erase(oEGO);
  set(fFALLING_DOWN_WELL);
  new.room(ROOM49_INSIDE_WELL);
}
if (rfENTERED_WELL) {
  #if RUBBER_TREE
    vWELL_MODE = WELLMODE_JUMP_OR_FALL_IN;
  #endif
  reset(rfENTERED_WELL);
  erase(oEGO);
  position(oEGO, 38, 125);
  set.priority(oEGO, PRI_WELL);
  ignore.blocks(oEGO);
  draw(oEGO);
  move.obj(oEGO, 38, 145, 3, rfFALLEN_INTO_WELL);
  if (rfCLIMBED_INTO_WELL) {
    print("Carefully... Oh no!  The sides were too slippery... you've fallen into the well!");
  }
  if (rfJUMPED_INTO_WELL) {
    print("What a mistake you made!  This well is too deep to jump into.");
  }
  set(f135_UNKNOWN);
  if (BUILD_TARGET == APPLE_IIGS) {
    set(fSOUND_END_MARKER);
  }
  else {
    sound(SND_FALLING, fSOUND_END_MARKER);
  }
}
if (fBUCKET_ROPE_CUT || fBUCKET_LOWERED) {
  if (!fCARRYING_BUCKET && (said("get", "bucket") || said("examine", "bucket"))) {
    print("There is no bucket here.");
  }
}
if (fBUCKET_ROPE_CUT) {
  if (said("lower", "bucket") || said("raise", "bucket")) {
    print("The bucket is not here.");
  }
}
if (!fBUCKET_ROPE_CUT && !fBUCKET_LOWERED) {
  if (!fCARRYING_BUCKET && (
    said("get", "bucket")
#if VERSION_MAJOR >= 2
    || said("untie", "bucket")
#endif
  )) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      print("The old bucket is securely fastened to a strong rope.");
    }
    else {
      print("You need to be closer to do that.");
    }
  }
  if (!fCARRYING_BUCKET && said("examine", "bucket")) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      if (fBUCKET_ON_WELL_HAS_WATER) {
        print("The old bucket holds a full load of water.");
      }
      else {
        print("It is large, old and weathered.  It has served the kingdom for many years.");
      }
    }
    else {
      print("From this distance it is difficult to see.");
    }
  }
}
if (!fBUCKET_ROPE_CUT && fBUCKET_LOWERED) {
  if (
    said("lower", "bucket")
#if VERSION_MAJOR >= 2
    || said("lower", "bucket", "well")
#endif
  ) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      print("The old bucket is already at the bottom of the well.");
    }
    else {
      print("You will find that very difficult to do from here.");
    }
  }
}
if (!fBUCKET_ROPE_CUT && !fBUCKET_LOWERED) {
  if (said("raise", "bucket") || said("raise", "rope")) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      print("The bucket is already at the top of the well.");
    }
    else {
      print("You will find that very difficult to do from here.");
    }
  }
}
if (rfBUCKET_DESCENDED) {
  reset(rfBUCKET_DESCENDED);
  stop.update(oBUCKET);
  stop.update(oHANDLE);
}
if (rfBUCKET_ASCENDED) {
  reset(rfBUCKET_ASCENDED);
  stop.update(oBUCKET);
  stop.update(oHANDLE);
}
if (!fBUCKET_ROPE_CUT && !fBUCKET_LOWERED) {
  if (
    said("lower", "bucket") || said("lower", "rope")
#if VERSION_MAJOR >= 2
    || said("lower", "bucket", "well") || said("lower", "rope", "well")
#endif
  ) {
    if (posn(oEGO, BX_NEAR_HANDLE)) {
      print("The old bucket disappears into the darkness.");
      start.update(oBUCKET);
      start.update(oHANDLE);
      end.of.loop(oBUCKET, rfBUCKET_DESCENDED);
      sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
      start.cycling(oHANDLE);
      set(fBUCKET_LOWERED);
    }
    else {
      print("You will find that very difficult to do from here.");
    }
  }
}
if (!fBUCKET_ROPE_CUT && fBUCKET_LOWERED && fON_WELL_ROPE) {
  if (said("raise", "bucket")) {
    print("You will find that very difficult to do from here.");
  }
}
if (!fBUCKET_ROPE_CUT && fBUCKET_LOWERED && !fON_WELL_ROPE) {
  if (said("raise", "bucket") || said("raise", "rope")) {
    if (posn(oEGO, BX_NEAR_HANDLE)) {
      print("The old bucket emerges from the depths of the well.");
      start.update(oBUCKET);
      start.update(oHANDLE);
      random(0, 250, vTEMP_RESULT);
      if (vTEMP_RESULT < 30) {
        set(fBUCKET_ON_WELL_HAS_WATER);
      }
      reverse.loop(oBUCKET, rfBUCKET_ASCENDED);
      start.cycling(oHANDLE);
      sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
      reset(fBUCKET_LOWERED);
    }
    else {
      print("You will find that very difficult to do from here.");
    }
  }
}
if (posn(oEGO, BX_NEAR_BUCKET)) {
  if (said("examine", "well") || said("look inside", "well")) {
    print("The well is deep and dark. But you can see the sky's reflection on the water.");
  }
}
if (!posn(oEGO, BX_NEAR_BUCKET)) {
  if (said("examine", "well")) {
    print("This well is one of the most ancient sites in the entire kingdom.  History and mystery seem to echo from its  every stone.");
  }
}
if (!fROPE_GONE) {
  if (said("examine", "rope")) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      print("It is thick and firmly attached.  It could easily carry heavy weights.");
    }
    else {
      print("From this distance it is difficult to see.");
    }
  }
}
if (said("get", "rope") && !fROPE_GONE) {
  if (posn(oEGO, BX_NEAR_BUCKET)) {
    print("The rope is securely fastened to the well.");
  }
  else {
    print("You are not close enough to even try.");
  }
}
if (said("get", "rope") && fROPE_GONE) {
  print("There is no useful rope to get.");
}
if (said("cut", "rope") || said("cut", "rope", "dagger")) {
  if (!fCARRYING_DAGGER) {
    print("You have no way to cut the rope.");
  }
  if (fCARRYING_DAGGER && !posn(oEGO, BX_NEAR_BUCKET)) {
    print("You will need longer arms to cut that rope from here.");
  }
  if (fCARRYING_DAGGER && posn(oEGO, BX_NEAR_BUCKET)) {
    if (fBUCKET_ROPE_CUT && !fROPE_DANGLING_IN_WELL) {
      print("You cut a piece of rope and it falls into the well.");
    }
    if (fROPE_GONE) {
      print("There is no useful rope left to cut.");
    }
    if (fBUCKET_ROPE_CUT && fROPE_DANGLING_IN_WELL) {
      erase(oROPE);
      print("The long piece of rope falls to the bottom of the well.");
      set(fROPE_GONE);
      reset(fROPE_DANGLING_IN_WELL);
    }
    if (!fBUCKET_ROPE_CUT && !fBUCKET_LOWERED) {
      start.update(oBUCKET);
      erase(oBUCKET);
      draw(oROPE);
      stop.cycling(oROPE);
      set(fCARRYING_BUCKET);
      if (fBUCKET_ON_WELL_HAS_WATER) {
        get("water");
        set(fBUCKET_FILLED);
        if (!fFILL_BUCKET_POINTS) {
          vSCORE += 2;
          set(fFILL_BUCKET_POINTS);
        }
      }
      set(fBUCKET_ROPE_CUT);
      get("water bucket");
      if (BUILD_TARGET == APPLE_IIGS) {
        sound(SND_POINTS, fMISC_END_MARKER);
      }
      print("With the rope cut, you are able to take the bucket.");
      vSCORE += 2;
    }
    if (!fBUCKET_ROPE_CUT && fBUCKET_LOWERED) {
      start.update(oBUCKET);
      erase(oBUCKET);
      reset(fBUCKET_LOWERED);
      set(fBUCKET_ROPE_CUT);
      set(fROPE_GONE);
      print("The bucket and rope are now at the bottom of the well.");
    }
  }
}
if (fROPE_GONE) {
  if (
    said("lower", "rope") || said("lower", "bucket")
#if VERSION_MAJOR >= 2
    || said("lower", "rope", "well") || said("lower", "bucket", "well")
#endif
  ) {
    print("There is not enough rope left to lower.");
  }
}
if (fBUCKET_ROPE_CUT && fROPE_DANGLING_IN_WELL) {
  if (
    said("lower", "rope")
#if VERSION_MAJOR >= 2
    || said("lower", "rope", "well")
#endif
  ) {
    if (posn(oEGO, BX_NEAR_ROPE)) {
      print("The rope has already been lowered.");
    }
    else {
      print("You are not close enough to do that.");
    }
  }
}
if (fBUCKET_ROPE_CUT && !fROPE_DANGLING_IN_WELL) {
  if (
    said("lower", "rope")
#if VERSION_MAJOR >= 2
    || said("lower", "rope", "well")
#endif
  ) {
    if (posn(oEGO, BX_NEAR_ROPE)) {
      start.cycling(oROPE);
      start.update(oHANDLE);
      print("The rope descends into the darkness.");
      sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
      end.of.loop(oROPE, rfROPE_DESCENDED);
      start.cycling(oHANDLE);
      set(fROPE_DANGLING_IN_WELL);
    }
    else {
      print("You are not close enough to do that.");
    }
  }
}
if (rfROPE_DESCENDED) {
  reset(rfROPE_DESCENDED);
  stop.update(oHANDLE);
  stop.cycling(oROPE);
}
if (fBUCKET_ROPE_CUT && !fROPE_DANGLING_IN_WELL) {
  if (said("raise", "rope")) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      print("The rope is already at the top of the well.");
    }
    else {
      print("You are not close enough to do that.");
    }
  }
}
if (fBUCKET_ROPE_CUT && fROPE_DANGLING_IN_WELL && !fON_WELL_ROPE) {
  if (said("raise", "rope")) {
    if (posn(oEGO, BX_NEAR_BUCKET)) {
      start.cycling(oROPE);
      start.update(oHANDLE);
      print("The rope emerges from the well.");
      reverse.loop(oROPE, rfROPE_ASCENDED);
      sound(SND_WELL_HANDLE_TURNING, rfPLAYED_SND_WELL_HANDLE_TURNING);
      start.cycling(oHANDLE);
      reset(fROPE_DANGLING_IN_WELL);
    }
    else {
      print("You are not close enough to do that.");
    }
  }
}
if (rfROPE_ASCENDED) {
  reset(rfROPE_ASCENDED);
  stop.update(oHANDLE);
  stop.cycling(oROPE);
}
if (fBUCKET_ROPE_CUT && fROPE_DANGLING_IN_WELL && fON_WELL_ROPE) {
  if (said("raise", "rope")) {
    print("You can't raise the rope from here!");
  }
}
if (rfBUCKET_DESCENDED_WITH_YOU_IN_IT) {
  reset(rfBUCKET_DESCENDED_WITH_YOU_IN_IT);
  set(fBUCKET_LOWERED);
  new.room(ROOM49_INSIDE_WELL);
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM21_WITCH_STOMPING_GROUND);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM13_WOLF_STOMPING_GROUND);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM11_GOAT_PEN_EAST);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM5_SERENE_LAKE_WEST);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
return;

#message 1 "The rope is securely fastened to the well."
#message 2 "You cut a piece of rope and it falls into the well."
#message 3 "With the rope cut, you are able to take the bucket."
#message 4 "The bucket and rope are now at the bottom of the well."
#message 5 "You have no way to cut the rope."
#message 6 "You are not close enough to even try."
#message 7 "You will need longer arms to cut that rope from here."
#message 8 "The old bucket is securely fastened to a strong rope."
#message 9 "There is no bucket here."
#message 10 "The bucket is already gone."
#message 11 "The well is deep and dark. But you can see the sky's reflection on the water."
#message 12 "It is large, old and weathered.  It has served the kingdom for many years."
#message 13 "The old bucket holds a full load of water."
#message 14 "It is thick and firmly attached.  It could easily carry heavy weights."
#message 15 "You need to be closer to do that."
#message 16 "This well is one of the most ancient sites in the entire kingdom.  History and mystery seem to echo from its  every stone."
#message 17 "From this distance it is difficult to see."
#message 18 "The old bucket is already at the bottom of the well."
#message 19 "The old bucket disappears into the darkness."
#message 20 "The bucket is not here."
#message 21 "The bucket is already at the top of the well."
#message 22 "The old bucket emerges from the depths of the well."
#message 23 "You will find that very difficult to do from here."
#message 24 "The rope has already been lowered."
#message 25 "The rope descends into the darkness."
#message 26 "The old bucket vanishes into the depths of the well."
#message 27 "The rope is already at the top of the well."
#message 28 "The old bucket is already at the top of the well."
#message 29 "The rope emerges from the well."
#message 30 "You can't raise the rope from here!"
#message 31 "The old bucket is lifted from the well."
#message 32 "You are not close enough to do that."
#message 33 "The sides of this well are too slippery to climb down."
#message 34 "The rope does not go down the well very far."
#message 35 "The old bucket is at the bottom of the well."
#message 36 "What a mistake you made!  This well is too deep to jump into."
#message 37 "The knots on the rope are too tight to untie."
#message 38 "The goat sure doesn't want to climb the rope."
#message 39 "The goat sure doesn`t want to climb down the well with you."
#message 40 "The goat refuses to do down the well."
#message 41 "That bucket isn't big enough for you and that big goat!"
#message 42 "The goat refuses to enter the dark well."
#message 43 "The goat refuses to go down into the dark well."
#message 44 "The goat doesn`t want to slide down the rope."
#message 45 "The goat is afraid of heights and refuses to jump down the well."
#message 46 "You can't do that when you are invisible!"
#message 47 "Carefully... Oh no!  The sides were too slippery... you've fallen into the well!"
#message 48 "They raise their colorful faces to the sun."
#message 49 "Somebody has cut the rope;  there's no way for you to get the bucket to the well's bottom."
#message 50 "All the water is at the bottom of the well."
#message 51 "Sorry, all the water is at the bottom of the well."
#message 52 "After you are in the old bucket, your weight causes it to slowly descend."
#message 53 "The long piece of rope falls to the bottom of the well."
#message 54 "There is no useful rope left to cut."
#message 55 "There is no useful rope to get."
#message 56 "You should be more careful the next time you try  climbing ropes."
#message 57 "There is not enough rope left to lower."
