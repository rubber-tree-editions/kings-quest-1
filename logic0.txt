#include "vars.txt"

LOGIC__HEADER

// Note: Even though this is a global script, all code that refers to oGOAT
//   is designed to be run in a room where object 13 refers to the goat.
// In reality, object 13 may not always be the goat (e.g. Room 76).
#define oGOAT o13

if (vERROR_CODE != 0) {
  call(LOGIC98_ERROR);
}
if (vROOM_NO == ROOM_NULL) {
  set.game.id("KQ1");
  script.size(100);
  set(fJOYSTICK_SENSITIVITY_ENABLED);
  vJOYSTICK_SENSITIVITY = 3;
  vMAX_SCORE = 158;
  vTEMP_CYCLE_DELAY = 2;
  vCYCLE_DELAY = vTEMP_CYCLE_DELAY;
  if (fRESTART_GAME_EXECUTED) {
    new.room(ROOM1_CASTLE_EAST);
  }
  else {
    new.room(ROOM83_TITLE_SCREEN);
  }
}
if (vROOM_NO == ROOM52_IN_WELL_UNDERWATER) {
  set(fEGO_ON_WATER);
}
if (fROOM_SCRIPT_EXECUTED) {
  animate.obj(oEGO);
  load.view(0);
  if (vROOM_NO == ROOM52_IN_WELL_UNDERWATER) {
    vEGO_VIEW_NO = 0;
  }
  if (vROOM_NO == ROOM65_IN_GINGERBREAD_HOUSE && vPREV_ROOM_NO == ROOM80_IN_MID_AIR) {
    vEGO_VIEW_NO = 105;
  }
  if (fEGO_DUCKING || f143) {
    reset(fEGO_DUCKING);
    reset(f143);
    reset(f98);
    vEGO_VIEW_NO = 0;
  }
  if (vPREV_ROOM_NO == ROOM10_GOAT_PEN_WEST && vROOM_NO != ROOM11_GOAT_PEN_EAST) {
    if (fGOAT_COMPANION) {
      vEGO_VIEW_NO = 0;
    }
  }
  if (vPREV_ROOM_NO == ROOM11_GOAT_PEN_EAST && vROOM_NO != ROOM10_GOAT_PEN_WEST) {
    if (fGOAT_COMPANION) {
      vEGO_VIEW_NO = 0;
    }
  }
  load.view.v(vEGO_VIEW_NO);
  set.view.v(oEGO, vEGO_VIEW_NO);
  load.logics(LOGIC102_DEFAULT_RESPONSES);
  if (vROOM_NO != ROOM53_KING_EDWARD_THRONE_ROOM
    && vROOM_NO != ROOM58_GIANT_STOMPING_GROUND
    && vROOM_NO != ROOM49_INSIDE_WELL
    && vROOM_NO != ROOM51_DRAGON_STOMPING_GROUND
    && vROOM_NO != ROOM52_IN_WELL_UNDERWATER
    && vROOM_NO != ROOM12_TOP_OF_WELL
    && vROOM_NO != ROOM10_GOAT_PEN_WEST
    && vROOM_NO != ROOM11_GOAT_PEN_EAST
  ) {
    load.view(75);
    load.view(87);
  }
  load.view(110);
  if (vROOM_NO != ROOM83_TITLE_SCREEN) {
    configure.screen(1, 22, 0);
  }
  if (fCARRYING_MUSHROOM || fEGO_TINY) {
    load.view(60);
  }
  if (fGOAT_COMPANION || vROOM_YOU_KILLED_THE_GOAT_IN != ROOM_NULL) {
    load.view(62);
  }
  reset(fDEBUG_MODE);
  observe.objs(oEGO);
  observe.blocks(oEGO);
  reset(fSWIMMING_LOGIC_LOADED);
  reset(fSWIMMING_IMPOSSIBLE_HERE);
  reset(f148);
  reset(fSOUND_END_MARKER);
  reset(f198);
  reset(f199);
  reset(f156);
  reset(f145);
  v62 = 0;
  v70 = 0;
  v71 = 0;
  v45 = 20;
  do {
    reset.v(v45);
    v45++;
  } while (v45 < 45);
  v45 = 30;
  do {
    lindirect(v45, 0);
    v45++;
  } while (v45 < 45);
  set.string(sPROMPT, ">");
  set.cursor.char("_");
}
if (fGAME_OVER) {
  if (!fGAME_OVER_PREPARATION) {
    disable.item(cSAVE);
    disable.item(cJUMP);
    disable.item(cSWIM);
    disable.item(cDUCK);
    load.logics(LOGIC100_GAME_OVER);
    load.sound(SND_GAME_OVER);
    vGAME_OVER_MESSAGE_COUNTDOWN = 40;
    set(fGAME_OVER_PREPARATION);
  }
  program.control();
  stop.motion(oEGO);
  call(LOGIC100_GAME_OVER);
  return;
}
if (controller(cHELP) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  call(LOGIC92_HELP);
}
if (controller(cTOGGLESOUND)) {
  toggle(fSOUND_ENABLED);
}
if (controller(cINITJOYSTICK)) {
  init.joy();
}
if (controller(cCLEARINPUT)) {
  cancel.line();
}
if (controller(cABOUT)) {
  print(
    "        King's Quest" "\n"
    "             by" "\n"
    "      Roberta Williams" "\n"
    "" "\n"
    "    Original version by" "\n"
    "Arthur Abraham, Chuck Tingley" "\n"
    "        Ken McNeill" "\n"
    "" "\n"
    "        Graphics by" "\n"
    " Doug McNeill, Greg Rowland" "\n"
    "" "\n"
    "      This version by" "\n"
    "       Sol Ackerman" "\n"
    "" "\n"
    "(C) 1986 Sierra On-Line, Inc."
  );
}
if (vROOM_NO > ROOM52_IN_WELL_UNDERWATER
  || vROOM_NO == ROOM3_ROCK_OVER_HOLE
  || vROOM_NO == ROOM6_POUCH_STUMP
  || vROOM_NO == ROOM9_FAIRY_GODMOTHER_STOMPING_GROUND
  || vROOM_NO == ROOM10_GOAT_PEN_WEST
  || vROOM_NO == ROOM11_GOAT_PEN_EAST
  || vROOM_NO == ROOM12_TOP_OF_WELL
  || vROOM_NO == ROOM13_WOLF_STOMPING_GROUND
  || vROOM_NO == ROOM14_BASE_GOLDEN_EGG_TREE
  || vROOM_NO == ROOM15_CARROT_PATCH_WEST
  || vROOM_NO == ROOM16_CARROT_PATCH_EAST
  || vROOM_NO == ROOM19_BASE_MOUNTAIN_DOOR
  || vROOM_NO == ROOM21_WITCH_STOMPING_GROUND
  || vROOM_NO == ROOM22_CONDOR_AND_CAVE
  || vROOM_NO == ROOM24_CLOVER_PATCH
  || vROOM_NO == ROOM27
  || vROOM_NO == ROOM28_OUTSIDE_GINGERBREAD_HOUSE
  || vROOM_NO == ROOM29
  || vROOM_NO == ROOM30_WALNUT_TREE
  || vROOM_NO == ROOM31_FREE_BOWL
  || vROOM_NO == ROOM35
  || vROOM_NO == ROOM36
  || vROOM_NO == ROOM38
  || vROOM_NO == ROOM44_OUTSIDE_WOODCUTTER_COTTAGE_FRONT
  || vROOM_NO == ROOM45_OUTSIDE_WOODCUTTER_COTTAGE_BACK
  || vROOM_NO == ROOM46_OGRE_STOMPING_GROUND
  || vROOM_NO == ROOM48_LEPRECHAUN_HOLE
  || vROOM_NO == ROOM50
  || vROOM_NO == ROOM51_DRAGON_STOMPING_GROUND
) {
  if (said("swim") || said("go", "swim") || said("swim", "anyword") || controller(cSWIM)) {
    print("You need to be in water to swim.");
  }
}
get.posn(oEGO, vTEMP_X_2, vTEMP_Y_2);
if (vEGO_DIR == vSAVED_EGO_DIR && vTEMP_X_2 == vSAVED_EGO_X && vTEMP_Y_2 == vSAVED_EGO_Y) {
  stop.cycling(oEGO);
}
else {
  start.cycling(oEGO);
}
vSAVED_EGO_X = vTEMP_X_2;
vSAVED_EGO_Y = vTEMP_Y_2;
vSAVED_EGO_DIR = vEGO_DIR;
if (f98) {
  start.cycling(oEGO);
}
else if (vEGO_DIR == DIR_NONE) {
  stop.cycling(oEGO);
}
if (controller(cDEBUG)) {
  load.logics(LOGIC99_DEBUG);
  set(fDEBUG_MODE);
  print("VERSION 1.0U");
  version();
}
if (said("fast")) {
  vTEMP_CYCLE_DELAY = 0;
  vCYCLE_DELAY = vTEMP_CYCLE_DELAY;
}
if (said("normal")) {
  vTEMP_CYCLE_DELAY = 2;
  vCYCLE_DELAY = vTEMP_CYCLE_DELAY;
}
if (said("slow")) {
  vTEMP_CYCLE_DELAY = 4;
  vCYCLE_DELAY = vTEMP_CYCLE_DELAY;
}
if ((said("quit") || controller(cQUIT)) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  quit(0);
}
if ((said("save", "game") || controller(cSAVE)) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  save.game();
}
if ((said("restore", "game") || controller(cRESTORE)) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  restore.game();
}
if ((said("restart", "game") || controller(cRESTART)) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  restart.game();
}
#ifdef RUBBER_TREE
if ((said("undo") || controller(cUNDO)) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  set(fUNDO);
}
#endif
if (controller(cINVENTORY) && vROOM_NO != ROOM83_TITLE_SCREEN) {
  status();
}
if (controller(cPREVINPUT)) {
  echo.line();
}
if (controller(cPAUSE)) {
  pause();
}
if (vROOM_NO != ROOM21_WITCH_STOMPING_GROUND) {
  if (said("jump") || controller(cJUMP)) {
    if (!f143
        && !fEGO_CLIMBING_BEANSTALK
        && !f158
        && !fEGO_INVISIBLE
        && !fEGO_TINY
        && vROOM_NO != ROOM79_IN_WOODCUTTER_COTTAGE
        && !fEGO_ON_WATER
        && !f145
        && !fEGO_DUCKING
        && vAQUATIC_ACTIVITY == AQUATICACTIVITY_NONE
        && vROOM_NO != ROOM29
        && vROOM_NO != ROOM13_WOLF_STOMPING_GROUND
        && vROOM_NO != ROOM53_KING_EDWARD_THRONE_ROOM
        && vROOM_NO != ROOM58_GIANT_STOMPING_GROUND
        && vROOM_NO != ROOM49_INSIDE_WELL
        && vROOM_NO != ROOM52_IN_WELL_UNDERWATER
        && vROOM_NO != ROOM63_UP_GOLDEN_EGG_TREE
        && vROOM_NO != ROOM80_IN_MID_AIR
        && vROOM_NO != ROOM48_LEPRECHAUN_HOLE
        && vROOM_NO != ROOM73
        && vROOM_NO != ROOM65_IN_GINGERBREAD_HOUSE
        && vROOM_NO != ROOM12_TOP_OF_WELL
        && vROOM_NO != ROOM14_BASE_GOLDEN_EGG_TREE
        && vROOM_NO != ROOM10_GOAT_PEN_WEST
        && vROOM_NO != ROOM11_GOAT_PEN_EAST
        && vROOM_NO != ROOM51_DRAGON_STOMPING_GROUND
    ) {
      set(f143);
      stop.motion(oEGO);
      set.cel(oEGO, 0);
      vTEMP_CYCLE_TIME = 2;
      cycle.time(oEGO, vTEMP_CYCLE_TIME);
      set.view(oEGO, 75);
      set(f98);
      end.of.loop(oEGO, f144);
    }
    else {
      print("There is no reason to do that now.");
    }
  }
  if (f144) {
    reset(f143);
    reset(f144);
    reset(f98);
    vTEMP_CYCLE_TIME_2 = 1;
    cycle.time(oEGO, vTEMP_CYCLE_TIME_2);
    start.motion(oEGO);
    set.view(oEGO, 0);
  }
}
if (said("duck") || controller(cDUCK)) {
  if (!fEGO_DUCKING
      && !fEGO_CLIMBING_BEANSTALK
      && !f158
      && !fEGO_INVISIBLE
      && !fEGO_TINY
      && !fEGO_ON_WATER
      && !f145
      && vAQUATIC_ACTIVITY == AQUATICACTIVITY_NONE
      && !f143
      && !f146
      && vROOM_NO != ROOM29
      && vROOM_NO != ROOM12_TOP_OF_WELL
      && vROOM_NO != ROOM53_KING_EDWARD_THRONE_ROOM
      && vROOM_NO != ROOM58_GIANT_STOMPING_GROUND
      && vROOM_NO != ROOM49_INSIDE_WELL
      && vROOM_NO != ROOM52_IN_WELL_UNDERWATER
      && vROOM_NO != ROOM63_UP_GOLDEN_EGG_TREE
      && vROOM_NO != ROOM80_IN_MID_AIR
      && vROOM_NO != ROOM48_LEPRECHAUN_HOLE
      && vROOM_NO != ROOM73
      && vROOM_NO != ROOM65_IN_GINGERBREAD_HOUSE
      && vROOM_NO != ROOM79_IN_WOODCUTTER_COTTAGE
      && vROOM_NO != ROOM14_BASE_GOLDEN_EGG_TREE
      && vROOM_NO != ROOM10_GOAT_PEN_WEST
      && vROOM_NO != ROOM11_GOAT_PEN_EAST
      && vROOM_NO != ROOM13_WOLF_STOMPING_GROUND
      && !fCARRIED_BY_WITCH
  ) {
    set(fEGO_DUCKING);
    set.view(oEGO, 87);
    set(f98);
    end.of.loop(oEGO, f201);
  }
  else if (!f202) {
    print("There is no reason to do that now.");
  }
}
if (f201) {
  stop.cycling(oEGO);
  stop.motion(oEGO);
  set(f202);
  reset(f201);
  reset(f98);
}
if (f202) {
  if (said("stand up") || controller(cDUCK)) {
    reset(fEGO_DUCKING);
    reset(f202);
    start.motion(oEGO);
    set.view(oEGO, 0);
    start.cycling(oEGO);
  }
}
if (said("thank", "anyword")) {
  print("You're welcome!");
}
if (fCARRYING_DAGGER) {
  if (said("examine", "dagger")) {
    show.obj(INV_DAGGER);
  }
  if (said("get", "dagger")) {
    print("You already have it.");
  }
  if (said("throw", "dagger")) {
    if (vROOM_NO != ROOM18_CLIFFS_LAKE_WEST
      && vROOM_NO != ROOM25
      && vROOM_NO != ROOM29
      && vROOM_NO != ROOM39
      && vROOM_NO != ROOM41
      && vROOM_NO != ROOM46_OGRE_STOMPING_GROUND
      && vROOM_NO != ROOM51_DRAGON_STOMPING_GROUND
      && vROOM_NO != ROOM58_GIANT_STOMPING_GROUND
    ) {
      print("There is no reason to throw the dagger.");
    }
    else {
      reset(fSAID_ACCEPTED_USER_INPUT);
    }
  }
}
if (fDAGGER_LOST && vROOM_YOU_KILLED_THE_GOAT_IN != vROOM_NO) {
  if (said("anyword", "dagger")) {
    print("You had the dagger and lost it.  Sorry.");
  }
}
if (fDAGGER_LOST && vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
  if (said("anyword", "dagger")) {
    print("You don't want the dagger anymore.");
  }
}
if (fCARROT_EATEN && said("eat", "carrot")) {
  print("You already ate the carrot.");
}
if (fCARRYING_CARROT) {
  if (said("eat", "carrot")) {
    if (!fGOAT_COMPANION) {
      print("Mmmm!  There's nothing like a crisp, fresh carrot.");
      drop("carrot");
      reset(fCARRYING_CARROT);
      reset(fPOINTS_FOR_CARROT);
      vSCORE -= 2;
      set(fCARROT_EATEN);
    }
    if (fGOAT_COMPANION) {
      print("Seeing how much the goat likes that carrot, eating it may be hazardous to your health.");
    }
  }
  if (said("examine", "carrot")) {
    show.obj(INV_CARROT);
  }
  if (said("get", "carrot")) {
    print("You already have a carrot.");
  }
  if (fGOAT_COMPANION) {
    if (said("feed", "carrot")
      || said("feed", "goat", "carrot")
      || said("feed", "carrot", "goat")
      || said("give", "carrot")
      || said("give", "goat", "carrot")
      || said("give", "carrot", "goat")
    ) {
      print("The goat quickly eats the carrot and disappears.");
      drop("carrot");
      reset(fCARRYING_CARROT);
      reset(fPOINTS_FOR_CARROT);
      vSCORE -= 2;
      if (vROOM_NO == ROOM10_GOAT_PEN_WEST || vROOM_NO == ROOM11_GOAT_PEN_EAST) {
        set.view(oEGO, 0);
      }
      erase(oGOAT);
      set(fGOAT_IS_GONE);
      reset(fGOAT_COMPANION);
    }
    if (said("show", "carrot") || said("show", "carrot", "goat") || said("show", "goat", "carrot")) {
      print("It is not nice to tease the goat.");
    }
  }
}
if (fCARRYING_GOLD_WALNUT) {
  if (said("open", "walnut") || said("crack", "walnut")) {
    print("You have already opened the walnut.");
  }
  if (said("eat", "walnut")) {
    print("Don't do that!  This walnut is not edible since it is pure gold.");
  }
  if (said("examine", "walnut")) {
    show.obj(INV_GOLDEN_WALNUT);
  }
}
if (fCARRYING_WALNUT) {
  if (said("eat", "walnut")) {
    print("Ouch!  It would be much easier if you opened the walnut first.");
  }
  if (said("examine", "walnut")) {
    show.obj(INV_WALNUT);
  }
  if (said("open", "walnut") || said("crack", "walnut")) {
    if (vROOM_NO == ROOM30_WALNUT_TREE) {
      sound(SND_GOLDEN_WALNUT, f148);
    }
    print("When you open the walnut, you discover the nut inside is pure gold!");
    reset(fCARRYING_WALNUT);
    set(fCARRYING_GOLD_WALNUT);
    drop("walnut");
    get("gold walnut");
    vSCORE += 3;
  }
}
if (vROOM_NO != ROOM49_INSIDE_WELL && said("dive", "anyword")) {
  if (vAQUATIC_ACTIVITY != AQUATICACTIVITY_NONE) {
    print("The water is very deep here. Without aid, it is impossible to swim under the water for any length of time.");
  }
  else {
    print("You need to be in the water to try that.");
  }
}
if (vSPELL_COUNTDOWN_HI == 0 && vSPELL_COUNTDOWN_LO == 0 && fPROTECTED_BY_SPELL) {
  print("\"Ye best be careful, young Graham.  The mystic protective spell of mine has weakened and departed.\"");
  reset(fPROTECTED_BY_SPELL);
}
else {
  vSPELL_COUNTDOWN_LO--;
  if (vSPELL_COUNTDOWN_LO == 0) {
    vSPELL_COUNTDOWN_HI--;
    if (vSPELL_COUNTDOWN_HI != 0) {
      vSPELL_COUNTDOWN_LO = 250;
    }
  }
}
if (fCARRYING_BUCKET && fBUCKET_FILLED && !fEGO_ON_WATER) {
  if (said("get", "bucket") || said("get", "water")) {
    print("You already have it.");
  }
  if (said("examine", "bucket") || said("examine", "water")) {
    show.obj(INV_BUCKET_OF_WATER);
  }
  if (said("drink", "water") || said("get", "drink")) {
    set(fDRANK_WATER);
    print("You drain the bucket of water to quench your thirst.");
    reset(fBUCKET_FILLED);
    drop("water");
    vSCORE -= 2;
    reset(fFILL_BUCKET_POINTS);
  }
}
if (fEGO_ON_WATER && (said("drink", "water") || said("get", "drink"))) {
  print("You open your mouth while swimming and quench your thirst.");
}
if (fCARRYING_BUCKET && !fBUCKET_FILLED) {
  if (fEGO_ON_WATER) {
    if (said("get", "water") || said("fill", "bucket")) {
      reset(fDRANK_WATER);
      print("With difficulty, you fill the bucket while swimming.");
      get("water");
      set(fBUCKET_FILLED);
      if (!fFILL_BUCKET_POINTS) {
        vSCORE += 2;
      }
      set(fFILL_BUCKET_POINTS);
    }
  }
  if (said("examine", "bucket")) {
    show.obj(INV_EMPTY_BUCKET);
  }
}
if (fCARRYING_MUSHROOM) {
  if (said("get", "mushroom")) {
    print("You already have it.");
  }
  if (said("examine", "mushroom")) {
    show.obj(INV_MUSHROOM);
  }
  if (said("eat", "mushroom")) {
    if (fEGO_INVISIBLE) {
      print("You try, but being invisible makes it impossible.");
    }
    if (!fEGO_CLIMBING_BEANSTALK
      && !f158
      && !fEGO_INVISIBLE
      && !f180
      && !f181
      && !f175
      && vROOM_NO != ROOM21_WITCH_STOMPING_GROUND
      && vROOM_NO != ROOM22_CONDOR_AND_CAVE
      && vROOM_NO != ROOM80_IN_MID_AIR
      && vROOM_NO != ROOM65_IN_GINGERBREAD_HOUSE
      && vROOM_NO != ROOM14_BASE_GOLDEN_EGG_TREE
      && vROOM_NO != ROOM63_UP_GOLDEN_EGG_TREE
      && vAQUATIC_ACTIVITY == AQUATICACTIVITY_NONE
      && vROOM_NO != ROOM12_TOP_OF_WELL
      && vROOM_NO != ROOM73
      && vROOM_NO != ROOM74
      && vROOM_NO != ROOM75_RAT_STOMPING_GROUND
    ) {
      print("As soon as you swallow the first bite, you have this strange shrinking feeling...  It's true!  You are now no bigger than a mouse!");
      set.view(oEGO, 60);
      v82 = 200;
      drop("mushroom");
      reset(fCARRYING_MUSHROOM);
      set(fEATEN_MUSHROOM);
      set(fEGO_TINY);
      vSCORE -= 1;
      if (vROOM_NO == ROOM78_IN_CAVE_WITH_TINY_HOLE) {
        vSCORE += 3;
      }
    }
    else {
      print("Now is not a good time to try and eat the mushroom.");
    }
  }
}
if (fEGO_TINY && v82 != 0) {
  v82--;
  if (v82 == 1 && vROOM_NO != ROOM36 && vROOM_NO != ROOM78_IN_CAVE_WITH_TINY_HOLE) {
    set.view(oEGO, 0);
    print("You feel a stretching sensation... Oh, you're back to your original size.");
    reset(fEGO_TINY);
  }
}
if (fCARRYING_RING) {
  if (said("examine", "ring")) {
    show.obj(INV_GOLD_RING);
  }
  if (said("get", "ring")) {
    print("You already have it.");
  }
  if (said("put on", "ring") || said("get", "ring", "pocket") || said("get", "ring", "pocket")) {
    if (fWEARING_RING) {
      print("The ring is already on your finger.");
    }
    if (!fWEARING_RING) {
      set(fWEARING_RING);
      print("You slip the beautiful ring on one of your fingers.");
    }
  }
  if (said("take off", "ring")) {
    if (!fWEARING_RING) {
      print("You are not wearing the ring.");
    }
    if (fWEARING_RING && !fEGO_INVISIBLE) {
      drop("ring");
      vSCORE -= 3;
      print("I don't know why, but you drop the magic ring.");
      reset(fCARRYING_RING);
      reset(fWEARING_RING);
      set(fLOST_RING);
    }
    if (fWEARING_RING && fEGO_INVISIBLE) {
      drop("ring");
      vSCORE -= 3;
      print("When the ring disappears, you reappear!");
      set.view(oEGO, 0);
      reset(fCARRYING_RING);
      reset(fEGO_INVISIBLE);
      reset(fWEARING_RING);
      set(fLOST_RING);
      v90 = 0;
      v91 = 0;
    }
  }
  if (said("rub", "ring")) {
    if (!fWEARING_RING) {
      print("The magic ring is still in your pocket.  You can't rub it there.");
    }
    if (fWEARING_RING && fGOAT_COMPANION) {
      print("You rub the magic ring but the goat seems to have a strange effect on it.");
    }
    if (fWEARING_RING && fEGO_INVISIBLE) {
      print("There is no need to rub the ring as you are already invisible.");
    }
    if (fWEARING_RING && !fGOAT_COMPANION && !fEGO_INVISIBLE) {
      if (
        vROOM_NO != ROOM65_IN_GINGERBREAD_HOUSE
        && !fEGO_CLIMBING_BEANSTALK
        && !f158
        && vAQUATIC_ACTIVITY == AQUATICACTIVITY_NONE
        && vROOM_NO != ROOM63_UP_GOLDEN_EGG_TREE
        && vROOM_NO != ROOM80_IN_MID_AIR
        && vROOM_NO != ROOM49_INSIDE_WELL
        && vROOM_NO != ROOM51_DRAGON_STOMPING_GROUND
        && vROOM_NO != ROOM52_IN_WELL_UNDERWATER
        && vROOM_NO != ROOM12_TOP_OF_WELL
        && vROOM_NO != ROOM79_IN_WOODCUTTER_COTTAGE
        && !f209
        && !fCARRIED_BY_WITCH
        && !fEGO_TINY
      ) {
        set.view(oEGO, 110);
        print("When you rub the magic ring, you mysteriously disappear, except for your footprints.");
        set(fEGO_INVISIBLE);
        v90 = 250;
        v91 = 10;
      }
      if (vROOM_NO == ROOM65_IN_GINGERBREAD_HOUSE
        || fEGO_CLIMBING_BEANSTALK
        || f158
        || vAQUATIC_ACTIVITY != AQUATICACTIVITY_NONE
        || vROOM_NO == ROOM63_UP_GOLDEN_EGG_TREE
        || vROOM_NO == ROOM80_IN_MID_AIR
        || vROOM_NO == ROOM49_INSIDE_WELL
        || vROOM_NO == ROOM51_DRAGON_STOMPING_GROUND
        || vROOM_NO == ROOM52_IN_WELL_UNDERWATER
        || vROOM_NO == ROOM12_TOP_OF_WELL
        || vROOM_NO == ROOM79_IN_WOODCUTTER_COTTAGE
        || f209
        || fCARRIED_BY_WITCH
        || fEGO_TINY
      ) {
        print("You're too busy right now to rub the ring.");
      }
    }
  }
}
if (fEGO_INVISIBLE) {
  v90--;
  if (v90 == 0) {
    if (v91 != 0) {
      v91--;
      v90 = 250;
    }
  }
}
if (v90 == 1 && v91 == 0) {
  v90 = 0;
  set.view(oEGO, 0);
  reset(fCARRYING_RING);
  drop("ring");
  reset(fWEARING_RING);
  set(fLOST_RING);
  reset(fEGO_INVISIBLE);
  print("The spell to make you invisible has expired and you are once again visible to dangerous creatures, but, the ring has now disappeared.");
  vSCORE -= 3;
}
if (fCARRYING_MAGIC_BEANS) {
  if (said("examine", "magic beans")) {
    show.obj(INV_MAGIC_BEANS);
  }
  if (said("eat", "magic beans")) {
    print("You're going to be sorry!!  These were magic beans!");
    vSCORE -= 5;
    drop("beans");
    reset(fCARRYING_MAGIC_BEANS);
  }
  if (said("plant", "magic beans")) {
    if (vROOM_NO != ROOM6_POUCH_STUMP && vROOM_NO != ROOM22_CONDOR_AND_CAVE && vROOM_NO != ROOM31_FREE_BOWL && vROOM_NO != ROOM35 && vROOM_NO != ROOM38) {
      print("That is not a bad idea, but this is not a very suitable place to plant these beans.  Why don't you try it elsewhere?");
    }
    else {
      reset(fSAID_ACCEPTED_USER_INPUT);
    }
  }
}
if (fCARRYING_BOWL) {
  if (vBOWL_STATE == BOWLSTATE_FULL_OF_STEW) {
    if (said("eat", "stew")) {
      if (vROOM_NO == ROOM79_IN_WOODCUTTER_COTTAGE) {
        print("It is very inconsiderate to eat in front of these poor, starving people.  The pains of guilt set in on you.");
      }
      else {
        print("You eat every bite of the delicious stew.");
      }
      vBOWL_STATE = BOWLSTATE_EMPTY;
      reset(fPOINTS_FOR_STEW);
      vSCORE -= 2;
    }
    else {
      if (said("taste", "stew")) {
        print("Even a small portion of the stew is very appetizing.");
      }
      if (said("examine", "stew")) {
        print("The stew is chock full of vegetables and meat.");
      }
      if (said("examine", "bowl") || said("look inside", "bowl")) {
        show.obj(INV_BOWL_OF_STEW);
      }
      if (said("fill") || said("fill", "bowl") || said("get", "stew")) {
        print("You already have a full bowl of stew.");
      }
    }
  }
  else if (vBOWL_STATE == BOWLSTATE_EMPTY) {
    if (said("examine", "bowl") || said("look inside", "bowl")) {
      show.obj(INV_EMPTY_BOWL);
    }
    if (said("read", "bowl") || said("read", "word") || said("examine", "word") || said("read", "bottom", "bowl") || said("examine", "bottom", "bowl")) {
      print("The word on the bottom of the bowl says \"fill\".");
      if (!fPOINTS_FOR_STEW) {
        set(fPOINTS_FOR_STEW);
        vSCORE += 1;
      }
    }
    if (said("fill") || said("fill", "bowl")) {
      if (vROOM_NO == ROOM79_IN_WOODCUTTER_COTTAGE) {
        print("The bowl fills with the delicious stew, but the woodcutters are unaware of it.");
      }
      else {
        print("After uttering that strange word, the bowl starts quivering and immediately fills up with a delicious, hot stew.");
      }
      vBOWL_STATE = BOWLSTATE_FULL_OF_STEW;
      if (!fPOINTS_FOR_STEW) {
        set(fPOINTS_FOR_STEW);
        vSCORE += 2;
      }
    }
    if (said("eat", "stew") || said("taste", "stew") || said("examine", "stew")) {
      print("You do not have any stew.");
    }
  }
}
if (fCARRYING_PEBBLES) {
  if (said("examine", "pebbles")) {
    show.obj(INV_PEBBLES);
  }
  if (said("throw", "pebbles")) {
    print("You throw one of your pebbles.");
  }
  if (said("get", "pebbles")) {
    print("You already have it.");
  }
}
if (fCARRYING_CHEST) {
  if (said("get", "chest")) {
    print("You already have it.");
  }
  if (said("examine", "chest") || said("look inside", "chest")) {
    show.obj(INV_CHEST);
  }
  if (said("open", "chest")) {
    print("You are dazzled by the countless supply of gold coins spilling from the magic chest.  You quickly close the chest.");
  }
  if (said("get", "coins")) {
    print("You are already carrying an endless supply of gold coins in the magic chest.");
  }
  if (said("examine", "coins")) {
    print("You open the chest and admire the gold coins for a moment. You then close the chest.");
  }
}
if (!fGOAT_COMPANION) {
  if (vROOM_YOU_KILLED_THE_GOAT_IN == ROOM_NULL && vROOM_NO != ROOM10_GOAT_PEN_WEST && vROOM_NO != ROOM11_GOAT_PEN_EAST) {
    if (said("anyword", "goat")) {
      print("There is no goat here.");
    }
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN != ROOM_NULL && vROOM_NO != ROOM10_GOAT_PEN_WEST && vROOM_NO != ROOM11_GOAT_PEN_EAST) {
    if (said("anyword", "goat")) {
      print("You've already killed the goat.");
    }
  }
}
if (fGOAT_COMPANION) {
  if (!fCARRYING_DAGGER && said("murder", "goat")) {
    print("You don't have any way to kill the old goat.");
  }
  if (fCARRYING_DAGGER && said("murder", "goat")) {
    if (vROOM_NO != ROOM25 && vROOM_NO != ROOM39 && vROOM_NO != ROOM41) {
      if (vROOM_NO == ROOM10_GOAT_PEN_WEST || vROOM_NO == ROOM11_GOAT_PEN_EAST) {
        get.posn(oEGO, vTEMP_X, vTEMP_Y);
        print("You hurl the dagger at the old goat... he tries to avoid the flying dagger, but your aim is true... as the dagger strikes, he slumps to the ground... dead.");
        set.view(oEGO, 0);
        set.view(oGOAT, 62);
        position.v(oGOAT, vTEMP_X, vTEMP_Y);
        draw(oGOAT);
        vROOM_YOU_KILLED_THE_GOAT_IN = vROOM_NO;
        vTEMP_STEP_SIZE = 0;
        step.size(oGOAT, vTEMP_STEP_SIZE);
        drop("dagger");
        vSCORE -= 5;
        reset(fCARRYING_DAGGER);
        reset(fGOAT_COMPANION);
        set(fDAGGER_LOST);
      }
      else {
        print("You hurl the dagger at the old goat... he tries to avoid the flying dagger, but your aim is true... as the dagger strikes, he slumps to the ground... dead.");
        erase(oGOAT);
        set.view(oGOAT, 62);
        draw(oGOAT);
        vROOM_YOU_KILLED_THE_GOAT_IN = vROOM_NO;
        vTEMP_STEP_SIZE = 0;
        step.size(oGOAT, vTEMP_STEP_SIZE);
        drop("dagger");
        vSCORE -= 5;
        reset(fCARRYING_DAGGER);
        reset(fGOAT_COMPANION);
        set(fDAGGER_LOST);
      }
    }
  }
  if (said("examine", "goat")) {
    print("The old goat is trotting briskly by your side.");
  }
  if (said("talk", "goat")) {
    print("The goat is not much for conversation.");
  }
}
if (fCARRYING_GOLD_KEY) {
  if (said("examine", "gold key")) {
    show.obj(INV_GOLD_KEY);
  }
  if (said("get", "gold key")) {
    print("You already have it.");
  }
}
if (fCARRYING_NOTE) {
  if (said("examine", "note")) {
    show.obj(INV_NOTE);
  }
  if (said("read", "note") || said("read", "message")) {
    print("The note reads, \"Sometimes it is wise to think backwards.\"");
    if (!fPOINTS_FOR_READING_NOTE) {
      set(fPOINTS_FOR_READING_NOTE);
      vSCORE += 1;
    }
  }
  if (said("get", "note")) {
    print("You already have it.");
  }
}
if (fCARRYING_SWISS_CHEESE) {
  if (said("get", "swiss cheese")) {
    print("You already have it.");
  }
  if (said("examine", "swiss cheese")) {
    show.obj(INV_SWISS_CHEESE);
  }
  if (said("eat", "swiss cheese")) {
    print("Mmmm!  That Swiss cheese was as delicious as it looked.");
    drop("cheese");
    reset(fCARRYING_SWISS_CHEESE);
    vSCORE -= 2;
  }
}
if (fCARRYING_CLOVER) {
  if (said("examine", "four leaf clover")) {
    show.obj(INV_CLOVER);
  }
  if (said("get", "four leaf clover")) {
    print("You already have it.");
  }
}
if (fCARRYING_SLINGSHOT) {
  if (said("get", "slingshot")) {
    print("You already have it.");
  }
  if (said("examine", "slingshot")) {
    show.obj(INV_SLINGSHOT);
  }
}
if (fCARRYING_SHIELD) {
  if (said("get", "shield")) {
    print("You already have it.");
  }
  if (said("examine", "shield")) {
    show.obj(INV_SHIELD);
  }
}
if (fCARRYING_SCEPTRE) {
  if (said("get", "sceptre")) {
    print("You already have it.");
  }
  if (said("examine", "sceptre")) {
    show.obj(INV_SCEPTRE);
  }
}
if (fCARRYING_DIAMONDS) {
  if (said("get", "pouch of diamonds")) {
    print("You already have it.");
  }
  if (said("examine", "pouch of diamonds") || said("examine", "bag of jewels")) {
    show.obj(INV_POUCH_OF_DIAMONDS);
  }
  if (said("open", "bag of jewels")) {
    print("You have already opened the pouch.");
  }
}
if (fCARRYING_POUCH) {
  if (said("get", "bag of jewels")) {
    print("You already have it.");
  }
  if (said("examine", "bag of jewels")) {
    show.obj(INV_CLOSED_POUCH);
  }
  if (!fCARRYING_DIAMONDS) {
    if (said("open", "bag of jewels") || said("look inside", "bag of jewels")) {
      print("Cautiously, you open the pouch and see many sparkling and flashing diamonds!  Quickly, you close it again so as not to lose any.");
      get("pouch of diamonds");
      drop("pouch");
      vSCORE += 3;
      set(fCARRYING_DIAMONDS);
      reset(fCARRYING_POUCH);
    }
  }
}
if (fCARRYING_GOLDEN_EGG) {
  if (said("get", "golden egg")) {
    print("You already have it.");
  }
  if (said("examine", "golden egg")) {
    show.obj(INV_GOLDEN_EGG);
  }
  if (said("eat", "golden egg")) {
    print("This egg will be tough to crack.");
  }
}
if (fCARRYING_FIDDLE) {
  if (said("get", "fiddle")) {
    print("You already have it.");
  }
  if (said("examine", "fiddle")) {
    show.obj(INV_FIDDLE);
  }
  if (vROOM_NO != ROOM76_LEPRECHAUN_ANTECHAMBER && vROOM_NO != ROOM77_LEPRECHAUN_KING_THRONE_ROOM) {
    if (said("play", "fiddle")) {
      print("You play a lively, toe-tapping tune on the fiddle.");
      if (vROOM_NO == ROOM79_IN_WOODCUTTER_COTTAGE) {
        sound(SND_FIDDLE_TUNE, f148);
      }
    }
  }
}
if (fCARRYING_MIRROR) {
  if (said("get", "mirror")) {
    print("You already have it.");
  }
  if (said("examine", "mirror") || said("look inside", "mirror")) {
    show.obj(INV_MIRROR);
  }
}
if (vTREASURE_COUNT == 3) {
  reset(f125);
}
if (fDEBUG_MODE) {
  call(LOGIC99_DEBUG);
}
call.v(vROOM_NO);
call(LOGIC102_DEFAULT_RESPONSES);
return;

LOGIC__FOOTER

