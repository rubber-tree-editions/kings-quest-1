#include "vars.txt"

LOGIC__HEADER

#define rfPULLED_UNDERWATER rf0

if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  set.horizon(43);
  load.logics(LOGIC101_SWIMMING);
  call(LOGIC101_SWIMMING);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, 47, 60, 0, 0);
  }
  if (vPREV_ROOM_NO == ROOM41_OPEN_SIDED_BRIDGE) {
    position(oEGO, 45, 166);
  }
  ignore.blocks(oEGO);
  draw(oEGO);
  show.pic();
}
if (posn(oEGO, 79, 135, 132, 167) || posn(oEGO, 133, 146, 159, 167)) {
  set(fSWIMMING_IMPOSSIBLE_HERE);
}
else {
  reset(fSWIMMING_IMPOSSIBLE_HERE);
}
if (said("examine", "lake")) {
  print("This is a beautiful little lake.");
}
if (!fEGO_ON_WATER) {
  if (posn(oEGO, 84, 59, 113, 78)
    || posn(oEGO, 102, 79, 113, 94)
    || posn(oEGO, 100, 95, 113, 128)
  ) {
    set(fEGO_ON_WATER);
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE && fEGO_ON_WATER) {
  vEGO_WATER_X = 255;
  if (posn(oEGO, 132, 51, 159, 59)) {
    vEGO_WATER_X = 132;
    vEGO_WATER_Y = 68;
  }
  if (posn(oEGO, 98, 55, 131, 60)) {
    vEGO_WATER_X = 109;
    vEGO_WATER_Y = 68;
  }
  if (posn(oEGO, 79, 135, 159, 167)) {
    vEGO_WATER_X = 115;
    vEGO_WATER_Y = 158;
  }
  if (posn(oEGO, 83, 59, 97, 81)) {
    vEGO_WATER_X = 90;
    vEGO_WATER_Y = 74;
  }
  if (posn(oEGO, 97, 106, 105, 109)
    || posn(oEGO, 98, 110, 105, 115)
    || posn(oEGO, 100, 116, 106, 121)
    || posn(oEGO, 102, 122, 110, 124)
    || posn(oEGO, 104, 125, 111, 128)
  ) {
    vEGO_WATER_X = 103;
    vEGO_WATER_Y = 115;
  }
  if (posn(oEGO, 102, 86, 106, 94)
    || posn(oEGO, 101, 95, 106, 98)
    || posn(oEGO, 97, 99, 105, 105)
  ) {
    vEGO_WATER_X = 104;
    vEGO_WATER_Y = 98;
  }
  if (vEGO_WATER_X == 255) {
    vEGO_WATER_X = 0;
  }
  else {
    get.posn(oEGO, vTEMP_X, vTEMP_Y);
    vEGO_WATER_X -= vTEMP_X;
    vEGO_WATER_Y -= vTEMP_Y;
    set(fMANUAL_EGO_WATER_POS);
  }
}
if (vAQUATIC_ACTIVITY == AQUATICACTIVITY_SWIMMING && fSWIMMING_IMPOSSIBLE_HERE && !rfPULLED_UNDERWATER) {
  set(rfPULLED_UNDERWATER);
  vAQUATIC_ACTIVITY = AQUATICACTIVITY_NONE;
  set.view(oEGO, 93);
  print("The swift water pulls you down to your untimely demise.");
}
if (!fBUCKET_FILLED && !fEGO_ON_WATER && !fDRANK_WATER) {
  if (said("drink", "water") || said("get", "drink")) {
    if (posn(oEGO, 76, 43, 159, 167)) {
      print("The water is clear and refreshing.");
    }
    else {
      print("You are not close enough to the lake.");
    }
  }
}
if (!fBUCKET_FILLED && fCARRYING_BUCKET && !fEGO_ON_WATER && said("get", "water")) {
  if (posn(oEGO, 76, 43, 159, 167)) {
    reset(fDRANK_WATER);
    print("The bucket is soon filled with clear water.");
    get("water");
    set(fBUCKET_FILLED);
    if (!fFILL_BUCKET_POINTS) {
      vSCORE += 2;
    }
    set(fFILL_BUCKET_POINTS);
  }
  else {
    print("You are not close enough to the lake.");
  }
}
if (vEGO_EDGE_CODE != EDGE_NONE) {
  reset(fSWIMMING_IMPOSSIBLE_HERE);
  if (f66_UNKNOWN) {
    reset(f66_UNKNOWN);
    reset(fGOAT_COMPANION);
    set(fGOAT_IS_GONE);
  }
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM9_FAIRY_GODMOTHER_STOMPING_GROUND);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM7_WATERFALL_LAKE_EAST);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM1_CASTLE_EAST);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM41_OPEN_SIDED_BRIDGE);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
call(LOGIC101_SWIMMING);
return;

LOGIC__FOOTER

#ifndef LOGIC_AS_C
#message 1 "The bucket is soon filled with clear water."
#message 2 "The water is clear and refreshing."
#message 3 "You are not close enough to the lake."
#message 4 "This is a beautiful little lake."
#message 5 "You have no container for water."
#message 6 "The swift water pulls you down to your untimely demise."
#endif
