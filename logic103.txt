#include "vars.txt"

LOGIC__HEADER

#define rfAPPROACHING_WATERFALL_LAKE_EDGE rf20
// unused: rf21
#define rfGOAT_WANDERING_OFF rf22
#define rfAPPROACHING_CLIFFS_LAKE_EDGE rf23

#define rvDISTANCE_FROM_EGO_TO_GOAT rv10
#define rvCOUNTDOWN rv11

#define oGOAT o13

#if VERSION_MAJOR >= 2
  #define fGOAT_WONT_SWIM fGOAT_WONT_SWIM_V2
#else
  #define fGOAT_WONT_SWIM fGOAT_WONT_SWIM_V1
#endif

if (fROOM_SCRIPT_EXECUTED) {
  load.view(14);
  animate.obj(oGOAT);
  set.view(oGOAT, 14);
  get.posn(oEGO, vTEMP_X, vTEMP_Y);
  object.on.land(oGOAT);
  if (vROOM_NO == ROOM7_WATERFALL_LAKE_EAST && vPREV_ROOM_NO == ROOM8_WATERFALL_LAKE_WEST && vTEMP_Y < 65) {
    position(oGOAT, 1, 42);
    stop.motion(oGOAT);
    stop.cycling(oGOAT);
    ignore.horizon(oGOAT);
    ignore.blocks(oGOAT);
    set(rfAPPROACHING_WATERFALL_LAKE_EDGE);
    draw(oGOAT);
    goto(ATRIVER);
  }
  #if VERSION_MAJOR >= 2
    if (vROOM_NO == ROOM7_WATERFALL_LAKE_EAST && vPREV_ROOM_NO == ROOM10_GOAT_PEN_WEST && vTEMP_X < 20) {
      position(oGOAT, 1, 42);
      stop.motion(oGOAT);
      stop.cycling(oGOAT);
      ignore.horizon(oGOAT);
      ignore.blocks(oGOAT);
      set(rfAPPROACHING_WATERFALL_LAKE_EDGE);
      draw(oGOAT);
      goto(ATRIVER);
    }
  #endif
  if (vROOM_NO == ROOM17_CLIFFS_LAKE_EAST && vPREV_ROOM_NO == ROOM18_CLIFFS_LAKE_WEST && vTEMP_Y < 65) {
    position(oGOAT, 1, 45);
    stop.motion(oGOAT);
    stop.cycling(oGOAT);
    ignore.horizon(oGOAT);
    ignore.blocks(oGOAT);
    set(rfAPPROACHING_CLIFFS_LAKE_EDGE);
    draw(oGOAT);
    goto(ATRIVER);
  }
  if (vROOM_NO == ROOM17_CLIFFS_LAKE_EAST && vPREV_ROOM_NO == ROOM32_EAST_OF_FREE_BOWL && vTEMP_X < 50) {
    position(oGOAT, 1, 45);
    stop.motion(oGOAT);
    stop.cycling(oGOAT);
    ignore.horizon(oGOAT);
    ignore.blocks(oGOAT);
    set(rfAPPROACHING_CLIFFS_LAKE_EDGE);
    draw(oGOAT);
    goto(ATRIVER);
  }
  if (vTEMP_Y > 100) {
    vTEMP_Y += 1;
  }
  else {
    vTEMP_Y -= 1;
  }
  #if BUILD_TARGET == APPLE_IIGS
    if (vROOM_NO == ROOM16_CARROT_PATCH_EAST && vTEMP_Y == 59) {
      vTEMP_Y = 55;
    }
  #endif
  position.v(oGOAT, vTEMP_X, vTEMP_Y);
  vTEMP_STEP_SIZE_2 = 1;
  step.size(oGOAT, vTEMP_STEP_SIZE_2);
  draw(oGOAT);
  follow.ego(oGOAT, 10, fGOAT_NEAR_YOU);
}
distance(oEGO, oGOAT, rvDISTANCE_FROM_EGO_TO_GOAT);
if (rvDISTANCE_FROM_EGO_TO_GOAT > 35) {
  #if VERSION_MAJOR >= 2
    vTEMP_STEP_SIZE_2 = 1;
  #else
    vTEMP_STEP_SIZE_2 = 2;
  #endif
  step.size(oGOAT, vTEMP_STEP_SIZE_2);
}
else {
  vTEMP_STEP_SIZE_2 = 1;
  step.size(oGOAT, vTEMP_STEP_SIZE_2);
}
if (!fGOAT_COMPANION) {
  goto RETURN;
}
if (fGAME_OVER) {
  normal.motion(oGOAT);
  stop.motion(oGOAT);
  stop.cycling(oGOAT);
  goto RETURN;
}
if (rfAPPROACHING_WATERFALL_LAKE_EDGE || rfAPPROACHING_CLIFFS_LAKE_EDGE) {
  goto(ATRIVER);
}
if (fSCRIPTED_GOAT_MOVEMENT) {
  ignore.blocks(oGOAT);
  goto RETURN;
  // unreachable goto necessary for bytecode matching:
  goto(BADLABEL);
}
observe.blocks(oGOAT);
BADLABEL:
rvCOUNTDOWN--;
if (rvCOUNTDOWN == 1) {
  if (rvDISTANCE_FROM_EGO_TO_GOAT < 21) {
    set(fGOAT_NEAR_YOU);
  }
  else if (!fGOAT_NEAR_YOU && vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE) {
    rvCOUNTDOWN = 0;
    start.cycling(oGOAT);
    start.motion(oGOAT);
    follow.ego(oGOAT, 10, fGOAT_NEAR_YOU);
  }
}
if (fGOAT_NEAR_YOU) {
  reset(fGOAT_NEAR_YOU);
  rvCOUNTDOWN = 9;
  normal.motion(oGOAT);
  stop.motion(oGOAT);
  stop.cycling(oGOAT);
}
if (rvDISTANCE_FROM_EGO_TO_GOAT > 20 && vAQUATIC_ACTIVITY > AQUATICACTIVITY_NONE && !fGOAT_WONT_SWIM) {
  if (
#if VERSION_MAJOR >= 2
    !fSWIMMING_IMPOSSIBLE_HERE &&
#endif
    vROOM_NO != ROOM1_CASTLE_EAST
    && vROOM_NO != ROOM2_CASTLE_WEST
    && vROOM_NO != ROOM41_OPEN_SIDED_BRIDGE
    && vROOM_NO != ROOM33_RAGING_RIVER_SPLIT_BY_BOULDER
    && vROOM_NO != ROOM34_PEBBLY_RIVER_BANK
    && vROOM_NO != ROOM32_EAST_OF_FREE_BOWL
    && vROOM_NO != ROOM25_RICKETY_BRIDGE
    && vROOM_NO != ROOM26_EMPTY_STUMP
    && vROOM_NO != ROOM39_WEATHER_BEATEN_BRIDGE
  ) {
    print("The goat does not mind getting its feet wet,but will not swim in the water.  You should go back and lead the goat around the water.");
  }
  set(fGOAT_WONT_SWIM);
  start.cycling(oGOAT);
  wander(oGOAT);
}
if (fGOAT_WONT_SWIM && rvDISTANCE_FROM_EGO_TO_GOAT < 25 && vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE) {
  reset(fGOAT_WONT_SWIM);
  follow.ego(oGOAT, 10, fGOAT_NEAR_YOU);
}
if (fEGO_INVISIBLE && !rfGOAT_WANDERING_OFF) {
  set(rfGOAT_WANDERING_OFF);
  print("The goat, not being able to see you, wanders off.");
  reset(fGOAT_COMPANION);
  wander(oGOAT);
  if (vOBJECT_EDGE_CODE != 0) {
    erase(oGOAT);
  }
}
goto RETURN;
ATRIVER:
  distance(oEGO, oGOAT, rvDISTANCE_FROM_EGO_TO_GOAT);
  if (rfAPPROACHING_CLIFFS_LAKE_EDGE && vAQUATIC_ACTIVITY > AQUATICACTIVITY_NONE && !fGOAT_WONT_SWIM) {
    set(fGOAT_WONT_SWIM);
    print("The goat does not mind getting its feet wet,but will not swim in the water.  You should go back and lead the goat around the water.");
  }
  if (rfAPPROACHING_CLIFFS_LAKE_EDGE && fGOAT_WONT_SWIM && rvDISTANCE_FROM_EGO_TO_GOAT < 25 && vAQUATIC_ACTIVITY <= AQUATICACTIVITY_NONE) {
    reset(fGOAT_WONT_SWIM);
  }
RETURN:
  return;

LOGIC__FOOTER

#ifndef LOGIC_AS_C
#message 1 "The goat does not mind getting its feet wet,but will not swim in the water.  You should go back and lead the goat around the water."
#message 2 "The goat, not being able to see you, wanders off."
#if BUILD_TARGET == APPLE_IIGS
  #message 90 "BREAK0"
#endif
#endif
