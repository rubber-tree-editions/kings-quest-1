#include "vars.txt"

LOGIC__HEADER

#define rfDOOR_OPENED rf0
#define rfDOOR_CLOSED rf1

#define oDOOR o1

if (fROOM_SCRIPT_EXECUTED) {
  load.pic(vROOM_NO);
  draw.pic(vROOM_NO);
  discard.pic(vROOM_NO);
  set.horizon(41);
  if (fGOAT_COMPANION) {
    load.logics(LOGIC103_GOAT);
  }
  if (vROOM_YOU_KILLED_THE_GOAT_IN == vROOM_NO) {
    add.to.pic(62, 0, 0, 27, 127, 0, 0);
  }
  load.view(20);
  animate.obj(oDOOR);
  set.view(oDOOR, 20);
  set.priority(oDOOR, 8);
  position(oDOOR, 101, 92);
  load.sound(SND_DOOR_OPENING);
  if (vPREV_ROOM_NO == ROOM66_MOUNTAIN_STAIRWAY_BOTTOM) {
    position(oEGO, 102, 98);
    vDOOR_STATE = DOORSTATE_OPEN;
  }
  if (vDOOR_STATE == DOORSTATE_OPEN) {
    set.cel(oDOOR, 3);
    draw(oDOOR);
    ignore.objs(oDOOR);
    ignore.blocks(oEGO);
    stop.update(oDOOR);
  }
  if (vDOOR_STATE == DOORSTATE_LOCKED || vDOOR_STATE == DOORSTATE_CLOSED) {
    set.cel(oDOOR, 0);
    draw(oDOOR);
    observe.objs(oDOOR);
    observe.blocks(oEGO);
    stop.update(oDOOR);
  }
  draw(oEGO);
  show.pic();
}
if (said("examine", "mountains")) {
  print("There seems to be a door built into the mountainside.");
}
if (said("climb", "mountains")) {
  print("The mountain is much too steep and rocky for you to climb.");
}
if (said("examine", "doors")) {
  if (posn(oEGO, 90, 93, 125, 114)) {
    print("It is a huge wooden door built right into the bottom of a small mountain!  It has a large keyhole.");
  }
  else {
    print("Don't be afraid.  Get close enough for a good look.");
  }
}
if (said("break", "doors")) {
  if (posn(oEGO, 90, 93, 125, 114)) {
    print("You strike the door with all your might!  To no avail.");
  }
  else {
    print("It will be difficult to do that from here.");
  }
}
if (!posn(oEGO, 90, 93, 125, 114)) {
  if (said("open", "doors")
    || said("close", "doors")
    || said("turn", "knob")
    || said("open", "doors", "gold key")
    || said("open", "doors", "golden", "gold key")
  ) {
    print("It will be difficult to do that from here.");
  }
  if (fCARRYING_GOLD_KEY) {
    if (said("use", "gold key") || said("lock", "doors") || said("unlock", "doors")) {
      print("It will be difficult to do that from here.");
    }
  }
}
if (posn(oEGO, 90, 93, 125, 114)) {
  if (fCARRYING_GOLD_KEY) {
    if (said("use", "gold key")) {
      print("How do you want to use the key?");
    }
    if (said("unlock", "doors")
      || said("unlock", "doors", "gold key")
      || said("unlock", "doors", "golden", "gold key")
      || said("open", "doors", "gold key")
      || said("open", "doors", "golden", "gold key")
    ) {
      if (vDOOR_STATE == DOORSTATE_CLOSED) {
        print("The door is already unlocked.");
      }
      if (vDOOR_STATE == DOORSTATE_OPEN) {
        print("There is no need to unlock an already open door.");
      }
      if (vDOOR_STATE == DOORSTATE_LOCKED) {
        print("Using the gold key, you unlock the huge door.");
        vDOOR_STATE = DOORSTATE_CLOSED;
        if (!fPOINTS_FOR_UNLOCKING_DOOR) {
          set(fPOINTS_FOR_UNLOCKING_DOOR);
          vSCORE += 2;
        }
      }
    }
    if (said("lock", "doors")) {
      if (vDOOR_STATE == DOORSTATE_LOCKED) {
        print("The door is already locked.");
      }
      if (vDOOR_STATE == DOORSTATE_CLOSED) {
        print("You lock the massive door with the heavy gold key.");
        vDOOR_STATE = DOORSTATE_LOCKED;
      }
      if (vDOOR_STATE == DOORSTATE_OPEN) {
        print("You need to close the door before you can lock it.");
      }
    }
  }
  if (vDOOR_STATE == DOORSTATE_LOCKED) {
    if (said("open", "doors") || said("turn", "knob")) {
      print("This massive door is securely locked.");
    }
  }
  if (vDOOR_STATE == DOORSTATE_OPEN) {
    if (said("open", "doors") || said("turn", "knob")) {
      print("The door is already open.");
    }
  }
  if (vDOOR_STATE == DOORSTATE_CLOSED) {
    if (said("open", "doors") || said("turn", "knob")) {
      start.update(oDOOR);
      sound(SND_DOOR_OPENING, fMISC_END_MARKER);
      end.of.loop(oDOOR, rfDOOR_OPENED);
      vDOOR_STATE = DOORSTATE_OPEN;
    }
  }
  if (said("close", "doors")) {
    if (vDOOR_STATE == DOORSTATE_LOCKED || vDOOR_STATE == DOORSTATE_CLOSED) {
      print("The door is already closed.");
    }
    if (vDOOR_STATE == DOORSTATE_OPEN) {
      start.update(oDOOR);
      reverse.loop(oDOOR, rfDOOR_CLOSED);
      vDOOR_STATE = DOORSTATE_CLOSED;
    }
  }
}
if (rfDOOR_OPENED) {
  reset(rfDOOR_OPENED);
  ignore.objs(oDOOR);
  ignore.blocks(oEGO);
  stop.update(oDOOR);
}
if (rfDOOR_CLOSED) {
  reset(rfDOOR_CLOSED);
  observe.objs(oDOOR);
  observe.blocks(oEGO);
  stop.update(oDOOR);
}
if (!fCARRYING_GOLD_KEY) {
  if (said("use", "gold key")) {
    print("You can't fool me!  You don't have a key.");
  }
  if (said("unlock", "doors")) {
    print("You can't unlock the door without a key.");
  }
  if (said("lock", "doors")) {
    print("You need a key to do that.");
  }
}
if (said("examine", "key hole")) {
  if (posn(oEGO, 90, 93, 125, 114)) {
    print("Through the keyhole you can dimly see a staircase. It looks like it might go up into the mountain.");
  }
  else {
    print("There aren't many keyholes in the ground here.");
  }
}
if (posn(oEGO, 99, 93, 114, 94)) {
  new.room(ROOM66_MOUNTAIN_STAIRWAY_BOTTOM);
}
if (vEGO_EDGE_CODE == EDGE_HORIZON) {
  new.room(ROOM30_WALNUT_TREE);
}
if (vEGO_EDGE_CODE == EDGE_RIGHT) {
  new.room(ROOM18_CLIFFS_LAKE_WEST);
}
if (vEGO_EDGE_CODE == EDGE_LEFT) {
  new.room(ROOM20_ALPINE_LAKE);
}
if (vEGO_EDGE_CODE == EDGE_BOTTOM) {
  new.room(ROOM14_BASE_GOLDEN_EGG_TREE);
}
if (fGOAT_COMPANION) {
  call(LOGIC103_GOAT);
}
return;

LOGIC__FOOTER

